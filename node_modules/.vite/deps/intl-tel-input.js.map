{
  "version": 3,
  "sources": ["../../intl-tel-input/build/js/intlTelInput.js"],
  "sourcesContent": ["/*\r\n * International Telephone Input v25.3.1\r\n * https://github.com/jackocnr/intl-tel-input.git\r\n * Licensed under the MIT license\r\n */\r\n\r\n// UMD\r\n(function(factory) {\r\n  if (typeof module === 'object' && module.exports) {\r\n    module.exports = factory();\r\n  } else {\r\n    window.intlTelInput = factory();\r\n  }\r\n}(() => {\r\n\r\nvar factoryOutput = (() => {\r\n  var __defProp = Object.defineProperty;\r\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\n  var __getOwnPropNames = Object.getOwnPropertyNames;\r\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\r\n  var __export = (target, all) => {\r\n    for (var name in all)\r\n      __defProp(target, name, { get: all[name], enumerable: true });\r\n  };\r\n  var __copyProps = (to, from, except, desc) => {\r\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n      for (let key of __getOwnPropNames(from))\r\n        if (!__hasOwnProp.call(to, key) && key !== except)\r\n          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n    }\r\n    return to;\r\n  };\r\n  var __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\n\r\n  // src/js/intl-tel-input.ts\r\n  var intl_tel_input_exports = {};\r\n  __export(intl_tel_input_exports, {\r\n    Iti: () => Iti,\r\n    default: () => intl_tel_input_default\r\n  });\r\n\r\n  // src/js/intl-tel-input/data.ts\r\n  var rawCountryData = [\r\n    [\r\n      \"af\",\r\n      // Afghanistan\r\n      \"93\"\r\n    ],\r\n    [\r\n      \"ax\",\r\n      // Åland Islands\r\n      \"358\",\r\n      1\r\n    ],\r\n    [\r\n      \"al\",\r\n      // Albania\r\n      \"355\"\r\n    ],\r\n    [\r\n      \"dz\",\r\n      // Algeria\r\n      \"213\"\r\n    ],\r\n    [\r\n      \"as\",\r\n      // American Samoa\r\n      \"1\",\r\n      5,\r\n      [\"684\"]\r\n    ],\r\n    [\r\n      \"ad\",\r\n      // Andorra\r\n      \"376\"\r\n    ],\r\n    [\r\n      \"ao\",\r\n      // Angola\r\n      \"244\"\r\n    ],\r\n    [\r\n      \"ai\",\r\n      // Anguilla\r\n      \"1\",\r\n      6,\r\n      [\"264\"]\r\n    ],\r\n    [\r\n      \"ag\",\r\n      // Antigua and Barbuda\r\n      \"1\",\r\n      7,\r\n      [\"268\"]\r\n    ],\r\n    [\r\n      \"ar\",\r\n      // Argentina\r\n      \"54\"\r\n    ],\r\n    [\r\n      \"am\",\r\n      // Armenia\r\n      \"374\"\r\n    ],\r\n    [\r\n      \"aw\",\r\n      // Aruba\r\n      \"297\"\r\n    ],\r\n    [\r\n      \"ac\",\r\n      // Ascension Island\r\n      \"247\"\r\n    ],\r\n    [\r\n      \"au\",\r\n      // Australia\r\n      \"61\",\r\n      0,\r\n      null,\r\n      \"0\"\r\n    ],\r\n    [\r\n      \"at\",\r\n      // Austria\r\n      \"43\"\r\n    ],\r\n    [\r\n      \"az\",\r\n      // Azerbaijan\r\n      \"994\"\r\n    ],\r\n    [\r\n      \"bs\",\r\n      // Bahamas\r\n      \"1\",\r\n      8,\r\n      [\"242\"]\r\n    ],\r\n    [\r\n      \"bh\",\r\n      // Bahrain\r\n      \"973\"\r\n    ],\r\n    [\r\n      \"bd\",\r\n      // Bangladesh\r\n      \"880\"\r\n    ],\r\n    [\r\n      \"bb\",\r\n      // Barbados\r\n      \"1\",\r\n      9,\r\n      [\"246\"]\r\n    ],\r\n    [\r\n      \"by\",\r\n      // Belarus\r\n      \"375\"\r\n    ],\r\n    [\r\n      \"be\",\r\n      // Belgium\r\n      \"32\"\r\n    ],\r\n    [\r\n      \"bz\",\r\n      // Belize\r\n      \"501\"\r\n    ],\r\n    [\r\n      \"bj\",\r\n      // Benin\r\n      \"229\"\r\n    ],\r\n    [\r\n      \"bm\",\r\n      // Bermuda\r\n      \"1\",\r\n      10,\r\n      [\"441\"]\r\n    ],\r\n    [\r\n      \"bt\",\r\n      // Bhutan\r\n      \"975\"\r\n    ],\r\n    [\r\n      \"bo\",\r\n      // Bolivia\r\n      \"591\"\r\n    ],\r\n    [\r\n      \"ba\",\r\n      // Bosnia and Herzegovina\r\n      \"387\"\r\n    ],\r\n    [\r\n      \"bw\",\r\n      // Botswana\r\n      \"267\"\r\n    ],\r\n    [\r\n      \"br\",\r\n      // Brazil\r\n      \"55\"\r\n    ],\r\n    [\r\n      \"io\",\r\n      // British Indian Ocean Territory\r\n      \"246\"\r\n    ],\r\n    [\r\n      \"vg\",\r\n      // British Virgin Islands\r\n      \"1\",\r\n      11,\r\n      [\"284\"]\r\n    ],\r\n    [\r\n      \"bn\",\r\n      // Brunei\r\n      \"673\"\r\n    ],\r\n    [\r\n      \"bg\",\r\n      // Bulgaria\r\n      \"359\"\r\n    ],\r\n    [\r\n      \"bf\",\r\n      // Burkina Faso\r\n      \"226\"\r\n    ],\r\n    [\r\n      \"bi\",\r\n      // Burundi\r\n      \"257\"\r\n    ],\r\n    [\r\n      \"kh\",\r\n      // Cambodia\r\n      \"855\"\r\n    ],\r\n    [\r\n      \"cm\",\r\n      // Cameroon\r\n      \"237\"\r\n    ],\r\n    [\r\n      \"ca\",\r\n      // Canada\r\n      \"1\",\r\n      1,\r\n      [\"204\", \"226\", \"236\", \"249\", \"250\", \"263\", \"289\", \"306\", \"343\", \"354\", \"365\", \"367\", \"368\", \"382\", \"387\", \"403\", \"416\", \"418\", \"428\", \"431\", \"437\", \"438\", \"450\", \"584\", \"468\", \"474\", \"506\", \"514\", \"519\", \"548\", \"579\", \"581\", \"584\", \"587\", \"604\", \"613\", \"639\", \"647\", \"672\", \"683\", \"705\", \"709\", \"742\", \"753\", \"778\", \"780\", \"782\", \"807\", \"819\", \"825\", \"867\", \"873\", \"879\", \"902\", \"905\"]\r\n    ],\r\n    [\r\n      \"cv\",\r\n      // Cape Verde\r\n      \"238\"\r\n    ],\r\n    [\r\n      \"bq\",\r\n      // Caribbean Netherlands\r\n      \"599\",\r\n      1,\r\n      [\"3\", \"4\", \"7\"]\r\n    ],\r\n    [\r\n      \"ky\",\r\n      // Cayman Islands\r\n      \"1\",\r\n      12,\r\n      [\"345\"]\r\n    ],\r\n    [\r\n      \"cf\",\r\n      // Central African Republic\r\n      \"236\"\r\n    ],\r\n    [\r\n      \"td\",\r\n      // Chad\r\n      \"235\"\r\n    ],\r\n    [\r\n      \"cl\",\r\n      // Chile\r\n      \"56\"\r\n    ],\r\n    [\r\n      \"cn\",\r\n      // China\r\n      \"86\"\r\n    ],\r\n    [\r\n      \"cx\",\r\n      // Christmas Island\r\n      \"61\",\r\n      2,\r\n      [\"89164\"],\r\n      \"0\"\r\n    ],\r\n    [\r\n      \"cc\",\r\n      // Cocos (Keeling) Islands\r\n      \"61\",\r\n      1,\r\n      [\"89162\"],\r\n      \"0\"\r\n    ],\r\n    [\r\n      \"co\",\r\n      // Colombia\r\n      \"57\"\r\n    ],\r\n    [\r\n      \"km\",\r\n      // Comoros\r\n      \"269\"\r\n    ],\r\n    [\r\n      \"cg\",\r\n      // Congo (Brazzaville)\r\n      \"242\"\r\n    ],\r\n    [\r\n      \"cd\",\r\n      // Congo (Kinshasa)\r\n      \"243\"\r\n    ],\r\n    [\r\n      \"ck\",\r\n      // Cook Islands\r\n      \"682\"\r\n    ],\r\n    [\r\n      \"cr\",\r\n      // Costa Rica\r\n      \"506\"\r\n    ],\r\n    [\r\n      \"ci\",\r\n      // Côte d'Ivoire\r\n      \"225\"\r\n    ],\r\n    [\r\n      \"hr\",\r\n      // Croatia\r\n      \"385\"\r\n    ],\r\n    [\r\n      \"cu\",\r\n      // Cuba\r\n      \"53\"\r\n    ],\r\n    [\r\n      \"cw\",\r\n      // Curaçao\r\n      \"599\",\r\n      0\r\n    ],\r\n    [\r\n      \"cy\",\r\n      // Cyprus\r\n      \"357\"\r\n    ],\r\n    [\r\n      \"cz\",\r\n      // Czech Republic\r\n      \"420\"\r\n    ],\r\n    [\r\n      \"dk\",\r\n      // Denmark\r\n      \"45\"\r\n    ],\r\n    [\r\n      \"dj\",\r\n      // Djibouti\r\n      \"253\"\r\n    ],\r\n    [\r\n      \"dm\",\r\n      // Dominica\r\n      \"1\",\r\n      13,\r\n      [\"767\"]\r\n    ],\r\n    [\r\n      \"do\",\r\n      // Dominican Republic\r\n      \"1\",\r\n      2,\r\n      [\"809\", \"829\", \"849\"]\r\n    ],\r\n    [\r\n      \"ec\",\r\n      // Ecuador\r\n      \"593\"\r\n    ],\r\n    [\r\n      \"eg\",\r\n      // Egypt\r\n      \"20\"\r\n    ],\r\n    [\r\n      \"sv\",\r\n      // El Salvador\r\n      \"503\"\r\n    ],\r\n    [\r\n      \"gq\",\r\n      // Equatorial Guinea\r\n      \"240\"\r\n    ],\r\n    [\r\n      \"er\",\r\n      // Eritrea\r\n      \"291\"\r\n    ],\r\n    [\r\n      \"ee\",\r\n      // Estonia\r\n      \"372\"\r\n    ],\r\n    [\r\n      \"sz\",\r\n      // Eswatini\r\n      \"268\"\r\n    ],\r\n    [\r\n      \"et\",\r\n      // Ethiopia\r\n      \"251\"\r\n    ],\r\n    [\r\n      \"fk\",\r\n      // Falkland Islands (Malvinas)\r\n      \"500\"\r\n    ],\r\n    [\r\n      \"fo\",\r\n      // Faroe Islands\r\n      \"298\"\r\n    ],\r\n    [\r\n      \"fj\",\r\n      // Fiji\r\n      \"679\"\r\n    ],\r\n    [\r\n      \"fi\",\r\n      // Finland\r\n      \"358\",\r\n      0\r\n    ],\r\n    [\r\n      \"fr\",\r\n      // France\r\n      \"33\"\r\n    ],\r\n    [\r\n      \"gf\",\r\n      // French Guiana\r\n      \"594\"\r\n    ],\r\n    [\r\n      \"pf\",\r\n      // French Polynesia\r\n      \"689\"\r\n    ],\r\n    [\r\n      \"ga\",\r\n      // Gabon\r\n      \"241\"\r\n    ],\r\n    [\r\n      \"gm\",\r\n      // Gambia\r\n      \"220\"\r\n    ],\r\n    [\r\n      \"ge\",\r\n      // Georgia\r\n      \"995\"\r\n    ],\r\n    [\r\n      \"de\",\r\n      // Germany\r\n      \"49\"\r\n    ],\r\n    [\r\n      \"gh\",\r\n      // Ghana\r\n      \"233\"\r\n    ],\r\n    [\r\n      \"gi\",\r\n      // Gibraltar\r\n      \"350\"\r\n    ],\r\n    [\r\n      \"gr\",\r\n      // Greece\r\n      \"30\"\r\n    ],\r\n    [\r\n      \"gl\",\r\n      // Greenland\r\n      \"299\"\r\n    ],\r\n    [\r\n      \"gd\",\r\n      // Grenada\r\n      \"1\",\r\n      14,\r\n      [\"473\"]\r\n    ],\r\n    [\r\n      \"gp\",\r\n      // Guadeloupe\r\n      \"590\",\r\n      0\r\n    ],\r\n    [\r\n      \"gu\",\r\n      // Guam\r\n      \"1\",\r\n      15,\r\n      [\"671\"]\r\n    ],\r\n    [\r\n      \"gt\",\r\n      // Guatemala\r\n      \"502\"\r\n    ],\r\n    [\r\n      \"gg\",\r\n      // Guernsey\r\n      \"44\",\r\n      1,\r\n      [\"1481\", \"7781\", \"7839\", \"7911\"],\r\n      \"0\"\r\n    ],\r\n    [\r\n      \"gn\",\r\n      // Guinea\r\n      \"224\"\r\n    ],\r\n    [\r\n      \"gw\",\r\n      // Guinea-Bissau\r\n      \"245\"\r\n    ],\r\n    [\r\n      \"gy\",\r\n      // Guyana\r\n      \"592\"\r\n    ],\r\n    [\r\n      \"ht\",\r\n      // Haiti\r\n      \"509\"\r\n    ],\r\n    [\r\n      \"hn\",\r\n      // Honduras\r\n      \"504\"\r\n    ],\r\n    [\r\n      \"hk\",\r\n      // Hong Kong SAR China\r\n      \"852\"\r\n    ],\r\n    [\r\n      \"hu\",\r\n      // Hungary\r\n      \"36\"\r\n    ],\r\n    [\r\n      \"is\",\r\n      // Iceland\r\n      \"354\"\r\n    ],\r\n    [\r\n      \"in\",\r\n      // India\r\n      \"91\"\r\n    ],\r\n    [\r\n      \"id\",\r\n      // Indonesia\r\n      \"62\"\r\n    ],\r\n    [\r\n      \"ir\",\r\n      // Iran\r\n      \"98\"\r\n    ],\r\n    [\r\n      \"iq\",\r\n      // Iraq\r\n      \"964\"\r\n    ],\r\n    [\r\n      \"ie\",\r\n      // Ireland\r\n      \"353\"\r\n    ],\r\n    [\r\n      \"im\",\r\n      // Isle of Man\r\n      \"44\",\r\n      2,\r\n      [\"1624\", \"74576\", \"7524\", \"7924\", \"7624\"],\r\n      \"0\"\r\n    ],\r\n    [\r\n      \"il\",\r\n      // Israel\r\n      \"972\"\r\n    ],\r\n    [\r\n      \"it\",\r\n      // Italy\r\n      \"39\",\r\n      0\r\n    ],\r\n    [\r\n      \"jm\",\r\n      // Jamaica\r\n      \"1\",\r\n      4,\r\n      [\"876\", \"658\"]\r\n    ],\r\n    [\r\n      \"jp\",\r\n      // Japan\r\n      \"81\"\r\n    ],\r\n    [\r\n      \"je\",\r\n      // Jersey\r\n      \"44\",\r\n      3,\r\n      [\"1534\", \"7509\", \"7700\", \"7797\", \"7829\", \"7937\"],\r\n      \"0\"\r\n    ],\r\n    [\r\n      \"jo\",\r\n      // Jordan\r\n      \"962\"\r\n    ],\r\n    [\r\n      \"kz\",\r\n      // Kazakhstan\r\n      \"7\",\r\n      1,\r\n      [\"33\", \"7\"],\r\n      \"8\"\r\n    ],\r\n    [\r\n      \"ke\",\r\n      // Kenya\r\n      \"254\"\r\n    ],\r\n    [\r\n      \"ki\",\r\n      // Kiribati\r\n      \"686\"\r\n    ],\r\n    [\r\n      \"xk\",\r\n      // Kosovo\r\n      \"383\"\r\n    ],\r\n    [\r\n      \"kw\",\r\n      // Kuwait\r\n      \"965\"\r\n    ],\r\n    [\r\n      \"kg\",\r\n      // Kyrgyzstan\r\n      \"996\"\r\n    ],\r\n    [\r\n      \"la\",\r\n      // Laos\r\n      \"856\"\r\n    ],\r\n    [\r\n      \"lv\",\r\n      // Latvia\r\n      \"371\"\r\n    ],\r\n    [\r\n      \"lb\",\r\n      // Lebanon\r\n      \"961\"\r\n    ],\r\n    [\r\n      \"ls\",\r\n      // Lesotho\r\n      \"266\"\r\n    ],\r\n    [\r\n      \"lr\",\r\n      // Liberia\r\n      \"231\"\r\n    ],\r\n    [\r\n      \"ly\",\r\n      // Libya\r\n      \"218\"\r\n    ],\r\n    [\r\n      \"li\",\r\n      // Liechtenstein\r\n      \"423\"\r\n    ],\r\n    [\r\n      \"lt\",\r\n      // Lithuania\r\n      \"370\"\r\n    ],\r\n    [\r\n      \"lu\",\r\n      // Luxembourg\r\n      \"352\"\r\n    ],\r\n    [\r\n      \"mo\",\r\n      // Macao SAR China\r\n      \"853\"\r\n    ],\r\n    [\r\n      \"mg\",\r\n      // Madagascar\r\n      \"261\"\r\n    ],\r\n    [\r\n      \"mw\",\r\n      // Malawi\r\n      \"265\"\r\n    ],\r\n    [\r\n      \"my\",\r\n      // Malaysia\r\n      \"60\"\r\n    ],\r\n    [\r\n      \"mv\",\r\n      // Maldives\r\n      \"960\"\r\n    ],\r\n    [\r\n      \"ml\",\r\n      // Mali\r\n      \"223\"\r\n    ],\r\n    [\r\n      \"mt\",\r\n      // Malta\r\n      \"356\"\r\n    ],\r\n    [\r\n      \"mh\",\r\n      // Marshall Islands\r\n      \"692\"\r\n    ],\r\n    [\r\n      \"mq\",\r\n      // Martinique\r\n      \"596\"\r\n    ],\r\n    [\r\n      \"mr\",\r\n      // Mauritania\r\n      \"222\"\r\n    ],\r\n    [\r\n      \"mu\",\r\n      // Mauritius\r\n      \"230\"\r\n    ],\r\n    [\r\n      \"yt\",\r\n      // Mayotte\r\n      \"262\",\r\n      1,\r\n      [\"269\", \"639\"],\r\n      \"0\"\r\n    ],\r\n    [\r\n      \"mx\",\r\n      // Mexico\r\n      \"52\"\r\n    ],\r\n    [\r\n      \"fm\",\r\n      // Micronesia\r\n      \"691\"\r\n    ],\r\n    [\r\n      \"md\",\r\n      // Moldova\r\n      \"373\"\r\n    ],\r\n    [\r\n      \"mc\",\r\n      // Monaco\r\n      \"377\"\r\n    ],\r\n    [\r\n      \"mn\",\r\n      // Mongolia\r\n      \"976\"\r\n    ],\r\n    [\r\n      \"me\",\r\n      // Montenegro\r\n      \"382\"\r\n    ],\r\n    [\r\n      \"ms\",\r\n      // Montserrat\r\n      \"1\",\r\n      16,\r\n      [\"664\"]\r\n    ],\r\n    [\r\n      \"ma\",\r\n      // Morocco\r\n      \"212\",\r\n      0,\r\n      null,\r\n      \"0\"\r\n    ],\r\n    [\r\n      \"mz\",\r\n      // Mozambique\r\n      \"258\"\r\n    ],\r\n    [\r\n      \"mm\",\r\n      // Myanmar (Burma)\r\n      \"95\"\r\n    ],\r\n    [\r\n      \"na\",\r\n      // Namibia\r\n      \"264\"\r\n    ],\r\n    [\r\n      \"nr\",\r\n      // Nauru\r\n      \"674\"\r\n    ],\r\n    [\r\n      \"np\",\r\n      // Nepal\r\n      \"977\"\r\n    ],\r\n    [\r\n      \"nl\",\r\n      // Netherlands\r\n      \"31\"\r\n    ],\r\n    [\r\n      \"nc\",\r\n      // New Caledonia\r\n      \"687\"\r\n    ],\r\n    [\r\n      \"nz\",\r\n      // New Zealand\r\n      \"64\"\r\n    ],\r\n    [\r\n      \"ni\",\r\n      // Nicaragua\r\n      \"505\"\r\n    ],\r\n    [\r\n      \"ne\",\r\n      // Niger\r\n      \"227\"\r\n    ],\r\n    [\r\n      \"ng\",\r\n      // Nigeria\r\n      \"234\"\r\n    ],\r\n    [\r\n      \"nu\",\r\n      // Niue\r\n      \"683\"\r\n    ],\r\n    [\r\n      \"nf\",\r\n      // Norfolk Island\r\n      \"672\"\r\n    ],\r\n    [\r\n      \"kp\",\r\n      // North Korea\r\n      \"850\"\r\n    ],\r\n    [\r\n      \"mk\",\r\n      // North Macedonia\r\n      \"389\"\r\n    ],\r\n    [\r\n      \"mp\",\r\n      // Northern Mariana Islands\r\n      \"1\",\r\n      17,\r\n      [\"670\"]\r\n    ],\r\n    [\r\n      \"no\",\r\n      // Norway\r\n      \"47\",\r\n      0\r\n    ],\r\n    [\r\n      \"om\",\r\n      // Oman\r\n      \"968\"\r\n    ],\r\n    [\r\n      \"pk\",\r\n      // Pakistan\r\n      \"92\"\r\n    ],\r\n    [\r\n      \"pw\",\r\n      // Palau\r\n      \"680\"\r\n    ],\r\n    [\r\n      \"ps\",\r\n      // Palestinian Territories\r\n      \"970\"\r\n    ],\r\n    [\r\n      \"pa\",\r\n      // Panama\r\n      \"507\"\r\n    ],\r\n    [\r\n      \"pg\",\r\n      // Papua New Guinea\r\n      \"675\"\r\n    ],\r\n    [\r\n      \"py\",\r\n      // Paraguay\r\n      \"595\"\r\n    ],\r\n    [\r\n      \"pe\",\r\n      // Peru\r\n      \"51\"\r\n    ],\r\n    [\r\n      \"ph\",\r\n      // Philippines\r\n      \"63\"\r\n    ],\r\n    [\r\n      \"pl\",\r\n      // Poland\r\n      \"48\"\r\n    ],\r\n    [\r\n      \"pt\",\r\n      // Portugal\r\n      \"351\"\r\n    ],\r\n    [\r\n      \"pr\",\r\n      // Puerto Rico\r\n      \"1\",\r\n      3,\r\n      [\"787\", \"939\"]\r\n    ],\r\n    [\r\n      \"qa\",\r\n      // Qatar\r\n      \"974\"\r\n    ],\r\n    [\r\n      \"re\",\r\n      // Réunion\r\n      \"262\",\r\n      0,\r\n      null,\r\n      \"0\"\r\n    ],\r\n    [\r\n      \"ro\",\r\n      // Romania\r\n      \"40\"\r\n    ],\r\n    [\r\n      \"ru\",\r\n      // Russia\r\n      \"7\",\r\n      0,\r\n      null,\r\n      \"8\"\r\n    ],\r\n    [\r\n      \"rw\",\r\n      // Rwanda\r\n      \"250\"\r\n    ],\r\n    [\r\n      \"ws\",\r\n      // Samoa\r\n      \"685\"\r\n    ],\r\n    [\r\n      \"sm\",\r\n      // San Marino\r\n      \"378\"\r\n    ],\r\n    [\r\n      \"st\",\r\n      // São Tomé & Príncipe\r\n      \"239\"\r\n    ],\r\n    [\r\n      \"sa\",\r\n      // Saudi Arabia\r\n      \"966\"\r\n    ],\r\n    [\r\n      \"sn\",\r\n      // Senegal\r\n      \"221\"\r\n    ],\r\n    [\r\n      \"rs\",\r\n      // Serbia\r\n      \"381\"\r\n    ],\r\n    [\r\n      \"sc\",\r\n      // Seychelles\r\n      \"248\"\r\n    ],\r\n    [\r\n      \"sl\",\r\n      // Sierra Leone\r\n      \"232\"\r\n    ],\r\n    [\r\n      \"sg\",\r\n      // Singapore\r\n      \"65\"\r\n    ],\r\n    [\r\n      \"sx\",\r\n      // Sint Maarten\r\n      \"1\",\r\n      21,\r\n      [\"721\"]\r\n    ],\r\n    [\r\n      \"sk\",\r\n      // Slovakia\r\n      \"421\"\r\n    ],\r\n    [\r\n      \"si\",\r\n      // Slovenia\r\n      \"386\"\r\n    ],\r\n    [\r\n      \"sb\",\r\n      // Solomon Islands\r\n      \"677\"\r\n    ],\r\n    [\r\n      \"so\",\r\n      // Somalia\r\n      \"252\"\r\n    ],\r\n    [\r\n      \"za\",\r\n      // South Africa\r\n      \"27\"\r\n    ],\r\n    [\r\n      \"kr\",\r\n      // South Korea\r\n      \"82\"\r\n    ],\r\n    [\r\n      \"ss\",\r\n      // South Sudan\r\n      \"211\"\r\n    ],\r\n    [\r\n      \"es\",\r\n      // Spain\r\n      \"34\"\r\n    ],\r\n    [\r\n      \"lk\",\r\n      // Sri Lanka\r\n      \"94\"\r\n    ],\r\n    [\r\n      \"bl\",\r\n      // St. Barthélemy\r\n      \"590\",\r\n      1\r\n    ],\r\n    [\r\n      \"sh\",\r\n      // St. Helena\r\n      \"290\"\r\n    ],\r\n    [\r\n      \"kn\",\r\n      // St. Kitts & Nevis\r\n      \"1\",\r\n      18,\r\n      [\"869\"]\r\n    ],\r\n    [\r\n      \"lc\",\r\n      // St. Lucia\r\n      \"1\",\r\n      19,\r\n      [\"758\"]\r\n    ],\r\n    [\r\n      \"mf\",\r\n      // St. Martin\r\n      \"590\",\r\n      2\r\n    ],\r\n    [\r\n      \"pm\",\r\n      // St. Pierre & Miquelon\r\n      \"508\"\r\n    ],\r\n    [\r\n      \"vc\",\r\n      // St. Vincent & Grenadines\r\n      \"1\",\r\n      20,\r\n      [\"784\"]\r\n    ],\r\n    [\r\n      \"sd\",\r\n      // Sudan\r\n      \"249\"\r\n    ],\r\n    [\r\n      \"sr\",\r\n      // Suriname\r\n      \"597\"\r\n    ],\r\n    [\r\n      \"sj\",\r\n      // Svalbard & Jan Mayen\r\n      \"47\",\r\n      1,\r\n      [\"79\"]\r\n    ],\r\n    [\r\n      \"se\",\r\n      // Sweden\r\n      \"46\"\r\n    ],\r\n    [\r\n      \"ch\",\r\n      // Switzerland\r\n      \"41\"\r\n    ],\r\n    [\r\n      \"sy\",\r\n      // Syria\r\n      \"963\"\r\n    ],\r\n    [\r\n      \"tw\",\r\n      // Taiwan\r\n      \"886\"\r\n    ],\r\n    [\r\n      \"tj\",\r\n      // Tajikistan\r\n      \"992\"\r\n    ],\r\n    [\r\n      \"tz\",\r\n      // Tanzania\r\n      \"255\"\r\n    ],\r\n    [\r\n      \"th\",\r\n      // Thailand\r\n      \"66\"\r\n    ],\r\n    [\r\n      \"tl\",\r\n      // Timor-Leste\r\n      \"670\"\r\n    ],\r\n    [\r\n      \"tg\",\r\n      // Togo\r\n      \"228\"\r\n    ],\r\n    [\r\n      \"tk\",\r\n      // Tokelau\r\n      \"690\"\r\n    ],\r\n    [\r\n      \"to\",\r\n      // Tonga\r\n      \"676\"\r\n    ],\r\n    [\r\n      \"tt\",\r\n      // Trinidad & Tobago\r\n      \"1\",\r\n      22,\r\n      [\"868\"]\r\n    ],\r\n    [\r\n      \"tn\",\r\n      // Tunisia\r\n      \"216\"\r\n    ],\r\n    [\r\n      \"tr\",\r\n      // Turkey\r\n      \"90\"\r\n    ],\r\n    [\r\n      \"tm\",\r\n      // Turkmenistan\r\n      \"993\"\r\n    ],\r\n    [\r\n      \"tc\",\r\n      // Turks & Caicos Islands\r\n      \"1\",\r\n      23,\r\n      [\"649\"]\r\n    ],\r\n    [\r\n      \"tv\",\r\n      // Tuvalu\r\n      \"688\"\r\n    ],\r\n    [\r\n      \"ug\",\r\n      // Uganda\r\n      \"256\"\r\n    ],\r\n    [\r\n      \"ua\",\r\n      // Ukraine\r\n      \"380\"\r\n    ],\r\n    [\r\n      \"ae\",\r\n      // United Arab Emirates\r\n      \"971\"\r\n    ],\r\n    [\r\n      \"gb\",\r\n      // United Kingdom\r\n      \"44\",\r\n      0,\r\n      null,\r\n      \"0\"\r\n    ],\r\n    [\r\n      \"us\",\r\n      // United States\r\n      \"1\",\r\n      0\r\n    ],\r\n    [\r\n      \"uy\",\r\n      // Uruguay\r\n      \"598\"\r\n    ],\r\n    [\r\n      \"vi\",\r\n      // U.S. Virgin Islands\r\n      \"1\",\r\n      24,\r\n      [\"340\"]\r\n    ],\r\n    [\r\n      \"uz\",\r\n      // Uzbekistan\r\n      \"998\"\r\n    ],\r\n    [\r\n      \"vu\",\r\n      // Vanuatu\r\n      \"678\"\r\n    ],\r\n    [\r\n      \"va\",\r\n      // Vatican City\r\n      \"39\",\r\n      1,\r\n      [\"06698\"]\r\n    ],\r\n    [\r\n      \"ve\",\r\n      // Venezuela\r\n      \"58\"\r\n    ],\r\n    [\r\n      \"vn\",\r\n      // Vietnam\r\n      \"84\"\r\n    ],\r\n    [\r\n      \"wf\",\r\n      // Wallis & Futuna\r\n      \"681\"\r\n    ],\r\n    [\r\n      \"eh\",\r\n      // Western Sahara\r\n      \"212\",\r\n      1,\r\n      [\"5288\", \"5289\"],\r\n      \"0\"\r\n    ],\r\n    [\r\n      \"ye\",\r\n      // Yemen\r\n      \"967\"\r\n    ],\r\n    [\r\n      \"zm\",\r\n      // Zambia\r\n      \"260\"\r\n    ],\r\n    [\r\n      \"zw\",\r\n      // Zimbabwe\r\n      \"263\"\r\n    ]\r\n  ];\r\n  var allCountries = [];\r\n  for (let i = 0; i < rawCountryData.length; i++) {\r\n    const c = rawCountryData[i];\r\n    allCountries[i] = {\r\n      name: \"\",\r\n      // this is now populated in the plugin\r\n      iso2: c[0],\r\n      dialCode: c[1],\r\n      priority: c[2] || 0,\r\n      areaCodes: c[3] || null,\r\n      nodeById: {},\r\n      nationalPrefix: c[4] || null\r\n    };\r\n  }\r\n  var data_default = allCountries;\r\n\r\n  // src/js/intl-tel-input/i18n/en/countries.ts\r\n  var countryTranslations = {\r\n    ad: \"Andorra\",\r\n    ae: \"United Arab Emirates\",\r\n    af: \"Afghanistan\",\r\n    ag: \"Antigua & Barbuda\",\r\n    ai: \"Anguilla\",\r\n    al: \"Albania\",\r\n    am: \"Armenia\",\r\n    ao: \"Angola\",\r\n    ar: \"Argentina\",\r\n    as: \"American Samoa\",\r\n    at: \"Austria\",\r\n    au: \"Australia\",\r\n    aw: \"Aruba\",\r\n    ax: \"\\xC5land Islands\",\r\n    az: \"Azerbaijan\",\r\n    ba: \"Bosnia & Herzegovina\",\r\n    bb: \"Barbados\",\r\n    bd: \"Bangladesh\",\r\n    be: \"Belgium\",\r\n    bf: \"Burkina Faso\",\r\n    bg: \"Bulgaria\",\r\n    bh: \"Bahrain\",\r\n    bi: \"Burundi\",\r\n    bj: \"Benin\",\r\n    bl: \"St. Barth\\xE9lemy\",\r\n    bm: \"Bermuda\",\r\n    bn: \"Brunei\",\r\n    bo: \"Bolivia\",\r\n    bq: \"Caribbean Netherlands\",\r\n    br: \"Brazil\",\r\n    bs: \"Bahamas\",\r\n    bt: \"Bhutan\",\r\n    bw: \"Botswana\",\r\n    by: \"Belarus\",\r\n    bz: \"Belize\",\r\n    ca: \"Canada\",\r\n    cc: \"Cocos (Keeling) Islands\",\r\n    cd: \"Congo - Kinshasa\",\r\n    cf: \"Central African Republic\",\r\n    cg: \"Congo - Brazzaville\",\r\n    ch: \"Switzerland\",\r\n    ci: \"C\\xF4te d\\u2019Ivoire\",\r\n    ck: \"Cook Islands\",\r\n    cl: \"Chile\",\r\n    cm: \"Cameroon\",\r\n    cn: \"China\",\r\n    co: \"Colombia\",\r\n    cr: \"Costa Rica\",\r\n    cu: \"Cuba\",\r\n    cv: \"Cape Verde\",\r\n    cw: \"Cura\\xE7ao\",\r\n    cx: \"Christmas Island\",\r\n    cy: \"Cyprus\",\r\n    cz: \"Czechia\",\r\n    de: \"Germany\",\r\n    dj: \"Djibouti\",\r\n    dk: \"Denmark\",\r\n    dm: \"Dominica\",\r\n    do: \"Dominican Republic\",\r\n    dz: \"Algeria\",\r\n    ec: \"Ecuador\",\r\n    ee: \"Estonia\",\r\n    eg: \"Egypt\",\r\n    eh: \"Western Sahara\",\r\n    er: \"Eritrea\",\r\n    es: \"Spain\",\r\n    et: \"Ethiopia\",\r\n    fi: \"Finland\",\r\n    fj: \"Fiji\",\r\n    fk: \"Falkland Islands\",\r\n    fm: \"Micronesia\",\r\n    fo: \"Faroe Islands\",\r\n    fr: \"France\",\r\n    ga: \"Gabon\",\r\n    gb: \"United Kingdom\",\r\n    gd: \"Grenada\",\r\n    ge: \"Georgia\",\r\n    gf: \"French Guiana\",\r\n    gg: \"Guernsey\",\r\n    gh: \"Ghana\",\r\n    gi: \"Gibraltar\",\r\n    gl: \"Greenland\",\r\n    gm: \"Gambia\",\r\n    gn: \"Guinea\",\r\n    gp: \"Guadeloupe\",\r\n    gq: \"Equatorial Guinea\",\r\n    gr: \"Greece\",\r\n    gt: \"Guatemala\",\r\n    gu: \"Guam\",\r\n    gw: \"Guinea-Bissau\",\r\n    gy: \"Guyana\",\r\n    hk: \"Hong Kong SAR China\",\r\n    hn: \"Honduras\",\r\n    hr: \"Croatia\",\r\n    ht: \"Haiti\",\r\n    hu: \"Hungary\",\r\n    id: \"Indonesia\",\r\n    ie: \"Ireland\",\r\n    il: \"Israel\",\r\n    im: \"Isle of Man\",\r\n    in: \"India\",\r\n    io: \"British Indian Ocean Territory\",\r\n    iq: \"Iraq\",\r\n    ir: \"Iran\",\r\n    is: \"Iceland\",\r\n    it: \"Italy\",\r\n    je: \"Jersey\",\r\n    jm: \"Jamaica\",\r\n    jo: \"Jordan\",\r\n    jp: \"Japan\",\r\n    ke: \"Kenya\",\r\n    kg: \"Kyrgyzstan\",\r\n    kh: \"Cambodia\",\r\n    ki: \"Kiribati\",\r\n    km: \"Comoros\",\r\n    kn: \"St. Kitts & Nevis\",\r\n    kp: \"North Korea\",\r\n    kr: \"South Korea\",\r\n    kw: \"Kuwait\",\r\n    ky: \"Cayman Islands\",\r\n    kz: \"Kazakhstan\",\r\n    la: \"Laos\",\r\n    lb: \"Lebanon\",\r\n    lc: \"St. Lucia\",\r\n    li: \"Liechtenstein\",\r\n    lk: \"Sri Lanka\",\r\n    lr: \"Liberia\",\r\n    ls: \"Lesotho\",\r\n    lt: \"Lithuania\",\r\n    lu: \"Luxembourg\",\r\n    lv: \"Latvia\",\r\n    ly: \"Libya\",\r\n    ma: \"Morocco\",\r\n    mc: \"Monaco\",\r\n    md: \"Moldova\",\r\n    me: \"Montenegro\",\r\n    mf: \"St. Martin\",\r\n    mg: \"Madagascar\",\r\n    mh: \"Marshall Islands\",\r\n    mk: \"North Macedonia\",\r\n    ml: \"Mali\",\r\n    mm: \"Myanmar (Burma)\",\r\n    mn: \"Mongolia\",\r\n    mo: \"Macao SAR China\",\r\n    mp: \"Northern Mariana Islands\",\r\n    mq: \"Martinique\",\r\n    mr: \"Mauritania\",\r\n    ms: \"Montserrat\",\r\n    mt: \"Malta\",\r\n    mu: \"Mauritius\",\r\n    mv: \"Maldives\",\r\n    mw: \"Malawi\",\r\n    mx: \"Mexico\",\r\n    my: \"Malaysia\",\r\n    mz: \"Mozambique\",\r\n    na: \"Namibia\",\r\n    nc: \"New Caledonia\",\r\n    ne: \"Niger\",\r\n    nf: \"Norfolk Island\",\r\n    ng: \"Nigeria\",\r\n    ni: \"Nicaragua\",\r\n    nl: \"Netherlands\",\r\n    no: \"Norway\",\r\n    np: \"Nepal\",\r\n    nr: \"Nauru\",\r\n    nu: \"Niue\",\r\n    nz: \"New Zealand\",\r\n    om: \"Oman\",\r\n    pa: \"Panama\",\r\n    pe: \"Peru\",\r\n    pf: \"French Polynesia\",\r\n    pg: \"Papua New Guinea\",\r\n    ph: \"Philippines\",\r\n    pk: \"Pakistan\",\r\n    pl: \"Poland\",\r\n    pm: \"St. Pierre & Miquelon\",\r\n    pr: \"Puerto Rico\",\r\n    ps: \"Palestinian Territories\",\r\n    pt: \"Portugal\",\r\n    pw: \"Palau\",\r\n    py: \"Paraguay\",\r\n    qa: \"Qatar\",\r\n    re: \"R\\xE9union\",\r\n    ro: \"Romania\",\r\n    rs: \"Serbia\",\r\n    ru: \"Russia\",\r\n    rw: \"Rwanda\",\r\n    sa: \"Saudi Arabia\",\r\n    sb: \"Solomon Islands\",\r\n    sc: \"Seychelles\",\r\n    sd: \"Sudan\",\r\n    se: \"Sweden\",\r\n    sg: \"Singapore\",\r\n    sh: \"St. Helena\",\r\n    si: \"Slovenia\",\r\n    sj: \"Svalbard & Jan Mayen\",\r\n    sk: \"Slovakia\",\r\n    sl: \"Sierra Leone\",\r\n    sm: \"San Marino\",\r\n    sn: \"Senegal\",\r\n    so: \"Somalia\",\r\n    sr: \"Suriname\",\r\n    ss: \"South Sudan\",\r\n    st: \"S\\xE3o Tom\\xE9 & Pr\\xEDncipe\",\r\n    sv: \"El Salvador\",\r\n    sx: \"Sint Maarten\",\r\n    sy: \"Syria\",\r\n    sz: \"Eswatini\",\r\n    tc: \"Turks & Caicos Islands\",\r\n    td: \"Chad\",\r\n    tg: \"Togo\",\r\n    th: \"Thailand\",\r\n    tj: \"Tajikistan\",\r\n    tk: \"Tokelau\",\r\n    tl: \"Timor-Leste\",\r\n    tm: \"Turkmenistan\",\r\n    tn: \"Tunisia\",\r\n    to: \"Tonga\",\r\n    tr: \"Turkey\",\r\n    tt: \"Trinidad & Tobago\",\r\n    tv: \"Tuvalu\",\r\n    tw: \"Taiwan\",\r\n    tz: \"Tanzania\",\r\n    ua: \"Ukraine\",\r\n    ug: \"Uganda\",\r\n    us: \"United States\",\r\n    uy: \"Uruguay\",\r\n    uz: \"Uzbekistan\",\r\n    va: \"Vatican City\",\r\n    vc: \"St. Vincent & Grenadines\",\r\n    ve: \"Venezuela\",\r\n    vg: \"British Virgin Islands\",\r\n    vi: \"U.S. Virgin Islands\",\r\n    vn: \"Vietnam\",\r\n    vu: \"Vanuatu\",\r\n    wf: \"Wallis & Futuna\",\r\n    ws: \"Samoa\",\r\n    ye: \"Yemen\",\r\n    yt: \"Mayotte\",\r\n    za: \"South Africa\",\r\n    zm: \"Zambia\",\r\n    zw: \"Zimbabwe\"\r\n  };\r\n  var countries_default = countryTranslations;\r\n\r\n  // src/js/intl-tel-input/i18n/en/interface.ts\r\n  var interfaceTranslations = {\r\n    selectedCountryAriaLabel: \"Selected country\",\r\n    noCountrySelected: \"No country selected\",\r\n    countryListAriaLabel: \"List of countries\",\r\n    searchPlaceholder: \"Search\",\r\n    zeroSearchResults: \"No results found\",\r\n    oneSearchResult: \"1 result found\",\r\n    multipleSearchResults: \"${count} results found\",\r\n    // additional countries (not supported by country-list library)\r\n    ac: \"Ascension Island\",\r\n    xk: \"Kosovo\"\r\n  };\r\n  var interface_default = interfaceTranslations;\r\n\r\n  // src/js/intl-tel-input/i18n/en/index.ts\r\n  var allTranslations = { ...countries_default, ...interface_default };\r\n  var en_default = allTranslations;\r\n\r\n  // src/js/intl-tel-input.ts\r\n  for (let i = 0; i < data_default.length; i++) {\r\n    data_default[i].name = en_default[data_default[i].iso2];\r\n  }\r\n  var id = 0;\r\n  var defaults = {\r\n    //* Whether or not to allow the dropdown.\r\n    allowDropdown: true,\r\n    //* Add a placeholder in the input with an example number for the selected country.\r\n    autoPlaceholder: \"polite\",\r\n    //* Modify the parentClass.\r\n    containerClass: \"\",\r\n    //* The order of the countries in the dropdown. Defaults to alphabetical.\r\n    countryOrder: null,\r\n    //* Add a country search input at the top of the dropdown.\r\n    countrySearch: true,\r\n    //* Modify the auto placeholder.\r\n    customPlaceholder: null,\r\n    //* Append menu to specified element.\r\n    dropdownContainer: null,\r\n    //* Don't display these countries.\r\n    excludeCountries: [],\r\n    //* Fix the dropdown width to the input width (rather than being as wide as the longest country name).\r\n    fixDropdownWidth: true,\r\n    //* Format the number as the user types\r\n    formatAsYouType: true,\r\n    //* Format the input value during initialisation and on setNumber.\r\n    formatOnDisplay: true,\r\n    //* geoIp lookup function.\r\n    geoIpLookup: null,\r\n    //* Inject a hidden input with the name returned from this function, and on submit, populate it with the result of getNumber.\r\n    hiddenInput: null,\r\n    //* Internationalise the plugin text e.g. search input placeholder, country names.\r\n    i18n: {},\r\n    //* Initial country.\r\n    initialCountry: \"\",\r\n    //* A function to load the utils script.\r\n    loadUtils: null,\r\n    //* National vs international formatting for numbers e.g. placeholders and displaying existing numbers.\r\n    nationalMode: true,\r\n    //* Display only these countries.\r\n    onlyCountries: [],\r\n    //* Number type to use for placeholders.\r\n    placeholderNumberType: \"MOBILE\",\r\n    //* Show flags - for both the selected country, and in the country dropdown\r\n    showFlags: true,\r\n    //* Display the international dial code next to the selected flag.\r\n    separateDialCode: false,\r\n    //* Only allow certain chars e.g. a plus followed by numeric digits, and cap at max valid length.\r\n    strictMode: false,\r\n    //* Use full screen popup instead of dropdown for country list.\r\n    useFullscreenPopup: typeof navigator !== \"undefined\" && typeof window !== \"undefined\" ? (\r\n      //* We cannot just test screen size as some smartphones/website meta tags will report desktop resolutions.\r\n      //* Note: to target Android Mobiles (and not Tablets), we must find 'Android' and 'Mobile'\r\n      /Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n        navigator.userAgent\r\n      ) || window.innerWidth <= 500\r\n    ) : false,\r\n    //* The number type to enforce during validation.\r\n    validationNumberTypes: [\"MOBILE\"]\r\n  };\r\n  var regionlessNanpNumbers = [\r\n    \"800\",\r\n    \"822\",\r\n    \"833\",\r\n    \"844\",\r\n    \"855\",\r\n    \"866\",\r\n    \"877\",\r\n    \"880\",\r\n    \"881\",\r\n    \"882\",\r\n    \"883\",\r\n    \"884\",\r\n    \"885\",\r\n    \"886\",\r\n    \"887\",\r\n    \"888\",\r\n    \"889\"\r\n  ];\r\n  var getNumeric = (s) => s.replace(/\\D/g, \"\");\r\n  var normaliseString = (s = \"\") => s.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\r\n  var isRegionlessNanp = (number) => {\r\n    const numeric = getNumeric(number);\r\n    if (numeric.charAt(0) === \"1\") {\r\n      const areaCode = numeric.substr(1, 3);\r\n      return regionlessNanpNumbers.includes(areaCode);\r\n    }\r\n    return false;\r\n  };\r\n  var translateCursorPosition = (relevantChars, formattedValue, prevCaretPos, isDeleteForwards) => {\r\n    if (prevCaretPos === 0 && !isDeleteForwards) {\r\n      return 0;\r\n    }\r\n    let count = 0;\r\n    for (let i = 0; i < formattedValue.length; i++) {\r\n      if (/[+0-9]/.test(formattedValue[i])) {\r\n        count++;\r\n      }\r\n      if (count === relevantChars && !isDeleteForwards) {\r\n        return i + 1;\r\n      }\r\n      if (isDeleteForwards && count === relevantChars + 1) {\r\n        return i;\r\n      }\r\n    }\r\n    return formattedValue.length;\r\n  };\r\n  var createEl = (name, attrs, container) => {\r\n    const el = document.createElement(name);\r\n    if (attrs) {\r\n      Object.entries(attrs).forEach(([key, value]) => el.setAttribute(key, value));\r\n    }\r\n    if (container) {\r\n      container.appendChild(el);\r\n    }\r\n    return el;\r\n  };\r\n  var forEachInstance = (method, ...args) => {\r\n    const { instances } = intlTelInput;\r\n    Object.values(instances).forEach((instance) => instance[method](...args));\r\n  };\r\n  var Iti = class {\r\n    constructor(input, customOptions = {}) {\r\n      this.id = id++;\r\n      this.telInput = input;\r\n      this.highlightedItem = null;\r\n      this.options = Object.assign({}, defaults, customOptions);\r\n      this.hadInitialPlaceholder = Boolean(input.getAttribute(\"placeholder\"));\r\n    }\r\n    //* Can't be private as it's called from intlTelInput convenience wrapper.\r\n    _init() {\r\n      if (this.options.useFullscreenPopup) {\r\n        this.options.fixDropdownWidth = false;\r\n      }\r\n      if (this.options.onlyCountries.length === 1) {\r\n        this.options.initialCountry = this.options.onlyCountries[0];\r\n      }\r\n      if (this.options.separateDialCode) {\r\n        this.options.nationalMode = false;\r\n      }\r\n      if (this.options.allowDropdown && !this.options.showFlags && !this.options.separateDialCode) {\r\n        this.options.nationalMode = false;\r\n      }\r\n      if (this.options.useFullscreenPopup && !this.options.dropdownContainer) {\r\n        this.options.dropdownContainer = document.body;\r\n      }\r\n      this.isAndroid = typeof navigator !== \"undefined\" ? /Android/i.test(navigator.userAgent) : false;\r\n      this.isRTL = !!this.telInput.closest(\"[dir=rtl]\");\r\n      const showOnDefaultSide = this.options.allowDropdown || this.options.separateDialCode;\r\n      this.showSelectedCountryOnLeft = this.isRTL ? !showOnDefaultSide : showOnDefaultSide;\r\n      if (this.options.separateDialCode) {\r\n        if (this.isRTL) {\r\n          this.originalPaddingRight = this.telInput.style.paddingRight;\r\n        } else {\r\n          this.originalPaddingLeft = this.telInput.style.paddingLeft;\r\n        }\r\n      }\r\n      this.options.i18n = { ...en_default, ...this.options.i18n };\r\n      const autoCountryPromise = new Promise((resolve, reject) => {\r\n        this.resolveAutoCountryPromise = resolve;\r\n        this.rejectAutoCountryPromise = reject;\r\n      });\r\n      const utilsScriptPromise = new Promise((resolve, reject) => {\r\n        this.resolveUtilsScriptPromise = resolve;\r\n        this.rejectUtilsScriptPromise = reject;\r\n      });\r\n      this.promise = Promise.all([autoCountryPromise, utilsScriptPromise]);\r\n      this.selectedCountryData = {};\r\n      this._processCountryData();\r\n      this._generateMarkup();\r\n      this._setInitialState();\r\n      this._initListeners();\r\n      this._initRequests();\r\n    }\r\n    //********************\r\n    //*  PRIVATE METHODS\r\n    //********************\r\n    //* Prepare all of the country data, including onlyCountries, excludeCountries, countryOrder options.\r\n    _processCountryData() {\r\n      this._processAllCountries();\r\n      this._processDialCodes();\r\n      this._translateCountryNames();\r\n      this._sortCountries();\r\n    }\r\n    //* Sort countries by countryOrder option (if present), then name.\r\n    _sortCountries() {\r\n      if (this.options.countryOrder) {\r\n        this.options.countryOrder = this.options.countryOrder.map((country) => country.toLowerCase());\r\n      }\r\n      this.countries.sort((a, b) => {\r\n        const { countryOrder } = this.options;\r\n        if (countryOrder) {\r\n          const aIndex = countryOrder.indexOf(a.iso2);\r\n          const bIndex = countryOrder.indexOf(b.iso2);\r\n          const aIndexExists = aIndex > -1;\r\n          const bIndexExists = bIndex > -1;\r\n          if (aIndexExists || bIndexExists) {\r\n            if (aIndexExists && bIndexExists) {\r\n              return aIndex - bIndex;\r\n            }\r\n            return aIndexExists ? -1 : 1;\r\n          }\r\n        }\r\n        return a.name.localeCompare(b.name);\r\n      });\r\n    }\r\n    //* Add a dial code to this.dialCodeToIso2Map.\r\n    _addToDialCodeMap(iso2, dialCode, priority) {\r\n      if (dialCode.length > this.dialCodeMaxLen) {\r\n        this.dialCodeMaxLen = dialCode.length;\r\n      }\r\n      if (!this.dialCodeToIso2Map.hasOwnProperty(dialCode)) {\r\n        this.dialCodeToIso2Map[dialCode] = [];\r\n      }\r\n      for (let i = 0; i < this.dialCodeToIso2Map[dialCode].length; i++) {\r\n        if (this.dialCodeToIso2Map[dialCode][i] === iso2) {\r\n          return;\r\n        }\r\n      }\r\n      const index = priority !== void 0 ? priority : this.dialCodeToIso2Map[dialCode].length;\r\n      this.dialCodeToIso2Map[dialCode][index] = iso2;\r\n    }\r\n    //* Process onlyCountries or excludeCountries array if present.\r\n    _processAllCountries() {\r\n      const { onlyCountries, excludeCountries } = this.options;\r\n      if (onlyCountries.length) {\r\n        const lowerCaseOnlyCountries = onlyCountries.map(\r\n          (country) => country.toLowerCase()\r\n        );\r\n        this.countries = data_default.filter(\r\n          (country) => lowerCaseOnlyCountries.includes(country.iso2)\r\n        );\r\n      } else if (excludeCountries.length) {\r\n        const lowerCaseExcludeCountries = excludeCountries.map(\r\n          (country) => country.toLowerCase()\r\n        );\r\n        this.countries = data_default.filter(\r\n          (country) => !lowerCaseExcludeCountries.includes(country.iso2)\r\n        );\r\n      } else {\r\n        this.countries = data_default;\r\n      }\r\n    }\r\n    //* Translate Countries by object literal provided on config.\r\n    _translateCountryNames() {\r\n      for (let i = 0; i < this.countries.length; i++) {\r\n        const iso2 = this.countries[i].iso2.toLowerCase();\r\n        if (this.options.i18n.hasOwnProperty(iso2)) {\r\n          this.countries[i].name = this.options.i18n[iso2];\r\n        }\r\n      }\r\n    }\r\n    //* Generate this.dialCodes and this.dialCodeToIso2Map.\r\n    _processDialCodes() {\r\n      this.dialCodes = {};\r\n      this.dialCodeMaxLen = 0;\r\n      this.dialCodeToIso2Map = {};\r\n      for (let i = 0; i < this.countries.length; i++) {\r\n        const c = this.countries[i];\r\n        if (!this.dialCodes[c.dialCode]) {\r\n          this.dialCodes[c.dialCode] = true;\r\n        }\r\n        this._addToDialCodeMap(c.iso2, c.dialCode, c.priority);\r\n      }\r\n      for (let i = 0; i < this.countries.length; i++) {\r\n        const c = this.countries[i];\r\n        if (c.areaCodes) {\r\n          const rootIso2Code = this.dialCodeToIso2Map[c.dialCode][0];\r\n          for (let j = 0; j < c.areaCodes.length; j++) {\r\n            const areaCode = c.areaCodes[j];\r\n            for (let k = 1; k < areaCode.length; k++) {\r\n              const partialAreaCode = areaCode.substr(0, k);\r\n              const partialDialCode = c.dialCode + partialAreaCode;\r\n              this._addToDialCodeMap(rootIso2Code, partialDialCode);\r\n              this._addToDialCodeMap(c.iso2, partialDialCode);\r\n            }\r\n            this._addToDialCodeMap(c.iso2, c.dialCode + areaCode);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    //* Generate all of the markup for the plugin: the selected country overlay, and the dropdown.\r\n    _generateMarkup() {\r\n      this.telInput.classList.add(\"iti__tel-input\");\r\n      if (!this.telInput.hasAttribute(\"autocomplete\") && !(this.telInput.form && this.telInput.form.hasAttribute(\"autocomplete\"))) {\r\n        this.telInput.setAttribute(\"autocomplete\", \"off\");\r\n      }\r\n      const {\r\n        allowDropdown,\r\n        separateDialCode,\r\n        showFlags,\r\n        containerClass,\r\n        hiddenInput,\r\n        dropdownContainer,\r\n        fixDropdownWidth,\r\n        useFullscreenPopup,\r\n        countrySearch,\r\n        i18n\r\n      } = this.options;\r\n      let parentClass = \"iti\";\r\n      if (allowDropdown) {\r\n        parentClass += \" iti--allow-dropdown\";\r\n      }\r\n      if (showFlags) {\r\n        parentClass += \" iti--show-flags\";\r\n      }\r\n      if (containerClass) {\r\n        parentClass += ` ${containerClass}`;\r\n      }\r\n      if (!useFullscreenPopup) {\r\n        parentClass += \" iti--inline-dropdown\";\r\n      }\r\n      const wrapper = createEl(\"div\", { class: parentClass });\r\n      this.telInput.parentNode?.insertBefore(wrapper, this.telInput);\r\n      if (allowDropdown || showFlags || separateDialCode) {\r\n        this.countryContainer = createEl(\r\n          \"div\",\r\n          { class: \"iti__country-container\" },\r\n          wrapper\r\n        );\r\n        if (this.showSelectedCountryOnLeft) {\r\n          this.countryContainer.style.left = \"0px\";\r\n        } else {\r\n          this.countryContainer.style.right = \"0px\";\r\n        }\r\n        if (allowDropdown) {\r\n          this.selectedCountry = createEl(\r\n            \"button\",\r\n            {\r\n              type: \"button\",\r\n              class: \"iti__selected-country\",\r\n              \"aria-expanded\": \"false\",\r\n              \"aria-label\": this.options.i18n.selectedCountryAriaLabel,\r\n              \"aria-haspopup\": \"true\",\r\n              \"aria-controls\": `iti-${this.id}__dropdown-content`,\r\n              \"role\": \"combobox\"\r\n            },\r\n            this.countryContainer\r\n          );\r\n          if (this.telInput.disabled) {\r\n            this.selectedCountry.setAttribute(\"disabled\", \"true\");\r\n          }\r\n        } else {\r\n          this.selectedCountry = createEl(\r\n            \"div\",\r\n            { class: \"iti__selected-country\" },\r\n            this.countryContainer\r\n          );\r\n        }\r\n        const selectedCountryPrimary = createEl(\"div\", { class: \"iti__selected-country-primary\" }, this.selectedCountry);\r\n        this.selectedCountryInner = createEl(\"div\", { class: \"iti__flag\" }, selectedCountryPrimary);\r\n        this.selectedCountryA11yText = createEl(\r\n          \"span\",\r\n          { class: \"iti__a11y-text\" },\r\n          this.selectedCountryInner\r\n        );\r\n        if (allowDropdown) {\r\n          this.dropdownArrow = createEl(\r\n            \"div\",\r\n            { class: \"iti__arrow\", \"aria-hidden\": \"true\" },\r\n            selectedCountryPrimary\r\n          );\r\n        }\r\n        if (separateDialCode) {\r\n          this.selectedDialCode = createEl(\r\n            \"div\",\r\n            { class: \"iti__selected-dial-code\" },\r\n            this.selectedCountry\r\n          );\r\n        }\r\n        if (allowDropdown) {\r\n          const extraClasses = fixDropdownWidth ? \"\" : \"iti--flexible-dropdown-width\";\r\n          this.dropdownContent = createEl(\"div\", {\r\n            id: `iti-${this.id}__dropdown-content`,\r\n            class: `iti__dropdown-content iti__hide ${extraClasses}`\r\n          });\r\n          if (countrySearch) {\r\n            this.searchInput = createEl(\r\n              \"input\",\r\n              {\r\n                type: \"text\",\r\n                class: \"iti__search-input\",\r\n                placeholder: i18n.searchPlaceholder,\r\n                role: \"combobox\",\r\n                \"aria-expanded\": \"true\",\r\n                \"aria-label\": i18n.searchPlaceholder,\r\n                \"aria-controls\": `iti-${this.id}__country-listbox`,\r\n                \"aria-autocomplete\": \"list\",\r\n                \"autocomplete\": \"off\"\r\n              },\r\n              this.dropdownContent\r\n            );\r\n            this.searchResultsA11yText = createEl(\r\n              \"span\",\r\n              { class: \"iti__a11y-text\" },\r\n              this.dropdownContent\r\n            );\r\n          }\r\n          this.countryList = createEl(\r\n            \"ul\",\r\n            {\r\n              class: \"iti__country-list\",\r\n              id: `iti-${this.id}__country-listbox`,\r\n              role: \"listbox\",\r\n              \"aria-label\": i18n.countryListAriaLabel\r\n            },\r\n            this.dropdownContent\r\n          );\r\n          this._appendListItems();\r\n          if (countrySearch) {\r\n            this._updateSearchResultsText();\r\n          }\r\n          if (dropdownContainer) {\r\n            let dropdownClasses = \"iti iti--container\";\r\n            if (useFullscreenPopup) {\r\n              dropdownClasses += \" iti--fullscreen-popup\";\r\n            } else {\r\n              dropdownClasses += \" iti--inline-dropdown\";\r\n            }\r\n            this.dropdown = createEl(\"div\", { class: dropdownClasses });\r\n            this.dropdown.appendChild(this.dropdownContent);\r\n          } else {\r\n            this.countryContainer.appendChild(this.dropdownContent);\r\n          }\r\n        }\r\n      }\r\n      wrapper.appendChild(this.telInput);\r\n      this._updateInputPadding();\r\n      if (hiddenInput) {\r\n        const telInputName = this.telInput.getAttribute(\"name\") || \"\";\r\n        const names = hiddenInput(telInputName);\r\n        if (names.phone) {\r\n          const existingInput = this.telInput.form?.querySelector(`input[name=\"${names.phone}\"]`);\r\n          if (existingInput) {\r\n            this.hiddenInput = existingInput;\r\n          } else {\r\n            this.hiddenInput = createEl(\"input\", {\r\n              type: \"hidden\",\r\n              name: names.phone\r\n            });\r\n            wrapper.appendChild(this.hiddenInput);\r\n          }\r\n        }\r\n        if (names.country) {\r\n          const existingInput = this.telInput.form?.querySelector(`input[name=\"${names.country}\"]`);\r\n          if (existingInput) {\r\n            this.hiddenInputCountry = existingInput;\r\n          } else {\r\n            this.hiddenInputCountry = createEl(\"input\", {\r\n              type: \"hidden\",\r\n              name: names.country\r\n            });\r\n            wrapper.appendChild(this.hiddenInputCountry);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    //* For each country: add a country list item <li> to the countryList <ul> container.\r\n    _appendListItems() {\r\n      for (let i = 0; i < this.countries.length; i++) {\r\n        const c = this.countries[i];\r\n        const extraClass = i === 0 ? \"iti__highlight\" : \"\";\r\n        const listItem = createEl(\r\n          \"li\",\r\n          {\r\n            id: `iti-${this.id}__item-${c.iso2}`,\r\n            class: `iti__country ${extraClass}`,\r\n            tabindex: \"-1\",\r\n            role: \"option\",\r\n            \"data-dial-code\": c.dialCode,\r\n            \"data-country-code\": c.iso2,\r\n            \"aria-selected\": \"false\"\r\n          },\r\n          this.countryList\r\n        );\r\n        c.nodeById[this.id] = listItem;\r\n        let content = \"\";\r\n        if (this.options.showFlags) {\r\n          content += `<div class='iti__flag iti__${c.iso2}'></div>`;\r\n        }\r\n        content += `<span class='iti__country-name'>${c.name}</span>`;\r\n        content += `<span class='iti__dial-code'>+${c.dialCode}</span>`;\r\n        listItem.insertAdjacentHTML(\"beforeend\", content);\r\n      }\r\n    }\r\n    //* Set the initial state of the input value and the selected country by:\r\n    //* 1. Extracting a dial code from the given number\r\n    //* 2. Using explicit initialCountry\r\n    _setInitialState(overrideAutoCountry = false) {\r\n      const attributeValue = this.telInput.getAttribute(\"value\");\r\n      const inputValue = this.telInput.value;\r\n      const useAttribute = attributeValue && attributeValue.charAt(0) === \"+\" && (!inputValue || inputValue.charAt(0) !== \"+\");\r\n      const val = useAttribute ? attributeValue : inputValue;\r\n      const dialCode = this._getDialCode(val);\r\n      const isRegionlessNanpNumber = isRegionlessNanp(val);\r\n      const { initialCountry, geoIpLookup } = this.options;\r\n      const isAutoCountry = initialCountry === \"auto\" && geoIpLookup;\r\n      if (dialCode && !isRegionlessNanpNumber) {\r\n        this._updateCountryFromNumber(val);\r\n      } else if (!isAutoCountry || overrideAutoCountry) {\r\n        const lowerInitialCountry = initialCountry ? initialCountry.toLowerCase() : \"\";\r\n        const isValidInitialCountry = lowerInitialCountry && this._getCountryData(lowerInitialCountry, true);\r\n        if (isValidInitialCountry) {\r\n          this._setCountry(lowerInitialCountry);\r\n        } else {\r\n          if (dialCode && isRegionlessNanpNumber) {\r\n            this._setCountry(\"us\");\r\n          } else {\r\n            this._setCountry();\r\n          }\r\n        }\r\n      }\r\n      if (val) {\r\n        this._updateValFromNumber(val);\r\n      }\r\n    }\r\n    //* Initialise the main event listeners: input keyup, and click selected country.\r\n    _initListeners() {\r\n      this._initTelInputListeners();\r\n      if (this.options.allowDropdown) {\r\n        this._initDropdownListeners();\r\n      }\r\n      if ((this.hiddenInput || this.hiddenInputCountry) && this.telInput.form) {\r\n        this._initHiddenInputListener();\r\n      }\r\n    }\r\n    //* Update hidden input on form submit.\r\n    _initHiddenInputListener() {\r\n      this._handleHiddenInputSubmit = () => {\r\n        if (this.hiddenInput) {\r\n          this.hiddenInput.value = this.getNumber();\r\n        }\r\n        if (this.hiddenInputCountry) {\r\n          this.hiddenInputCountry.value = this.getSelectedCountryData().iso2 || \"\";\r\n        }\r\n      };\r\n      this.telInput.form?.addEventListener(\r\n        \"submit\",\r\n        this._handleHiddenInputSubmit\r\n      );\r\n    }\r\n    //* initialise the dropdown listeners.\r\n    _initDropdownListeners() {\r\n      this._handleLabelClick = (e) => {\r\n        if (this.dropdownContent.classList.contains(\"iti__hide\")) {\r\n          this.telInput.focus();\r\n        } else {\r\n          e.preventDefault();\r\n        }\r\n      };\r\n      const label = this.telInput.closest(\"label\");\r\n      if (label) {\r\n        label.addEventListener(\"click\", this._handleLabelClick);\r\n      }\r\n      this._handleClickSelectedCountry = () => {\r\n        if (this.dropdownContent.classList.contains(\"iti__hide\") && !this.telInput.disabled && !this.telInput.readOnly) {\r\n          this._openDropdown();\r\n        }\r\n      };\r\n      this.selectedCountry.addEventListener(\"click\", this._handleClickSelectedCountry);\r\n      this._handleCountryContainerKeydown = (e) => {\r\n        const isDropdownHidden = this.dropdownContent.classList.contains(\"iti__hide\");\r\n        if (isDropdownHidden && [\"ArrowUp\", \"ArrowDown\", \" \", \"Enter\"].includes(e.key)) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          this._openDropdown();\r\n        }\r\n        if (e.key === \"Tab\") {\r\n          this._closeDropdown();\r\n        }\r\n      };\r\n      this.countryContainer.addEventListener(\r\n        \"keydown\",\r\n        this._handleCountryContainerKeydown\r\n      );\r\n    }\r\n    //* Init many requests: utils script / geo ip lookup.\r\n    _initRequests() {\r\n      let { loadUtils, initialCountry, geoIpLookup } = this.options;\r\n      if (loadUtils && !intlTelInput.utils) {\r\n        this._handlePageLoad = () => {\r\n          window.removeEventListener(\"load\", this._handlePageLoad);\r\n          intlTelInput.attachUtils(loadUtils)?.catch(() => {\r\n          });\r\n        };\r\n        if (intlTelInput.documentReady()) {\r\n          this._handlePageLoad();\r\n        } else {\r\n          window.addEventListener(\"load\", this._handlePageLoad);\r\n        }\r\n      } else {\r\n        this.resolveUtilsScriptPromise();\r\n      }\r\n      const isAutoCountry = initialCountry === \"auto\" && geoIpLookup;\r\n      if (isAutoCountry && !this.selectedCountryData.iso2) {\r\n        this._loadAutoCountry();\r\n      } else {\r\n        this.resolveAutoCountryPromise();\r\n      }\r\n    }\r\n    //* Perform the geo ip lookup.\r\n    _loadAutoCountry() {\r\n      if (intlTelInput.autoCountry) {\r\n        this.handleAutoCountry();\r\n      } else if (!intlTelInput.startedLoadingAutoCountry) {\r\n        intlTelInput.startedLoadingAutoCountry = true;\r\n        if (typeof this.options.geoIpLookup === \"function\") {\r\n          this.options.geoIpLookup(\r\n            (iso2 = \"\") => {\r\n              const iso2Lower = iso2.toLowerCase();\r\n              const isValidIso2 = iso2Lower && this._getCountryData(iso2Lower, true);\r\n              if (isValidIso2) {\r\n                intlTelInput.autoCountry = iso2Lower;\r\n                setTimeout(() => forEachInstance(\"handleAutoCountry\"));\r\n              } else {\r\n                this._setInitialState(true);\r\n                forEachInstance(\"rejectAutoCountryPromise\");\r\n              }\r\n            },\r\n            () => {\r\n              this._setInitialState(true);\r\n              forEachInstance(\"rejectAutoCountryPromise\");\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n    _openDropdownWithPlus() {\r\n      this._openDropdown();\r\n      this.searchInput.value = \"+\";\r\n      this._filterCountries(\"\", true);\r\n    }\r\n    //* Initialize the tel input listeners.\r\n    _initTelInputListeners() {\r\n      const { strictMode, formatAsYouType, separateDialCode, formatOnDisplay, allowDropdown, countrySearch } = this.options;\r\n      let userOverrideFormatting = false;\r\n      if (/\\p{L}/u.test(this.telInput.value)) {\r\n        userOverrideFormatting = true;\r\n      }\r\n      this._handleInputEvent = (e) => {\r\n        if (this.isAndroid && e?.data === \"+\" && separateDialCode && allowDropdown && countrySearch) {\r\n          const currentCaretPos = this.telInput.selectionStart || 0;\r\n          const valueBeforeCaret = this.telInput.value.substring(0, currentCaretPos - 1);\r\n          const valueAfterCaret = this.telInput.value.substring(currentCaretPos);\r\n          this.telInput.value = valueBeforeCaret + valueAfterCaret;\r\n          this._openDropdownWithPlus();\r\n          return;\r\n        }\r\n        if (this._updateCountryFromNumber(this.telInput.value)) {\r\n          this._triggerCountryChange();\r\n        }\r\n        const isFormattingChar = e?.data && /[^+0-9]/.test(e.data);\r\n        const isPaste = e?.inputType === \"insertFromPaste\" && this.telInput.value;\r\n        if (isFormattingChar || isPaste && !strictMode) {\r\n          userOverrideFormatting = true;\r\n        } else if (!/[^+0-9]/.test(this.telInput.value)) {\r\n          userOverrideFormatting = false;\r\n        }\r\n        const disableFormatOnSetNumber = e?.detail && e.detail[\"isSetNumber\"] && !formatOnDisplay;\r\n        if (formatAsYouType && !userOverrideFormatting && !disableFormatOnSetNumber) {\r\n          const currentCaretPos = this.telInput.selectionStart || 0;\r\n          const valueBeforeCaret = this.telInput.value.substring(0, currentCaretPos);\r\n          const relevantCharsBeforeCaret = valueBeforeCaret.replace(/[^+0-9]/g, \"\").length;\r\n          const isDeleteForwards = e?.inputType === \"deleteContentForward\";\r\n          const formattedValue = this._formatNumberAsYouType();\r\n          const newCaretPos = translateCursorPosition(relevantCharsBeforeCaret, formattedValue, currentCaretPos, isDeleteForwards);\r\n          this.telInput.value = formattedValue;\r\n          this.telInput.setSelectionRange(newCaretPos, newCaretPos);\r\n        }\r\n      };\r\n      this.telInput.addEventListener(\"input\", this._handleInputEvent);\r\n      if (strictMode || separateDialCode) {\r\n        this._handleKeydownEvent = (e) => {\r\n          if (e.key && e.key.length === 1 && !e.altKey && !e.ctrlKey && !e.metaKey) {\r\n            if (separateDialCode && allowDropdown && countrySearch && e.key === \"+\") {\r\n              e.preventDefault();\r\n              this._openDropdownWithPlus();\r\n              return;\r\n            }\r\n            if (strictMode) {\r\n              const value = this.telInput.value;\r\n              const alreadyHasPlus = value.charAt(0) === \"+\";\r\n              const isInitialPlus = !alreadyHasPlus && this.telInput.selectionStart === 0 && e.key === \"+\";\r\n              const isNumeric = /^[0-9]$/.test(e.key);\r\n              const isAllowedChar = separateDialCode ? isNumeric : isInitialPlus || isNumeric;\r\n              const newValue = value.slice(0, this.telInput.selectionStart) + e.key + value.slice(this.telInput.selectionEnd);\r\n              const newFullNumber = this._getFullNumber(newValue);\r\n              const coreNumber = intlTelInput.utils.getCoreNumber(newFullNumber, this.selectedCountryData.iso2);\r\n              const hasExceededMaxLength = this.maxCoreNumberLength && coreNumber.length > this.maxCoreNumberLength;\r\n              let isChangingDialCode = false;\r\n              if (alreadyHasPlus) {\r\n                const currentCountry = this.selectedCountryData.iso2;\r\n                const newCountry = this._getCountryFromNumber(newFullNumber);\r\n                isChangingDialCode = newCountry !== currentCountry;\r\n              }\r\n              if (!isAllowedChar || hasExceededMaxLength && !isChangingDialCode && !isInitialPlus) {\r\n                e.preventDefault();\r\n              }\r\n            }\r\n          }\r\n        };\r\n        this.telInput.addEventListener(\"keydown\", this._handleKeydownEvent);\r\n      }\r\n    }\r\n    //* Adhere to the input's maxlength attr.\r\n    _cap(number) {\r\n      const max = parseInt(this.telInput.getAttribute(\"maxlength\") || \"\", 10);\r\n      return max && number.length > max ? number.substr(0, max) : number;\r\n    }\r\n    //* Trigger a custom event on the input.\r\n    _trigger(name, detailProps = {}) {\r\n      const e = new CustomEvent(name, {\r\n        bubbles: true,\r\n        cancelable: true,\r\n        detail: detailProps\r\n      });\r\n      this.telInput.dispatchEvent(e);\r\n    }\r\n    //* Open the dropdown.\r\n    _openDropdown() {\r\n      const { fixDropdownWidth, countrySearch } = this.options;\r\n      if (fixDropdownWidth) {\r\n        this.dropdownContent.style.width = `${this.telInput.offsetWidth}px`;\r\n      }\r\n      this.dropdownContent.classList.remove(\"iti__hide\");\r\n      this.selectedCountry.setAttribute(\"aria-expanded\", \"true\");\r\n      this._setDropdownPosition();\r\n      if (countrySearch) {\r\n        const firstCountryItem = this.countryList.firstElementChild;\r\n        if (firstCountryItem) {\r\n          this._highlightListItem(firstCountryItem, false);\r\n          this.countryList.scrollTop = 0;\r\n        }\r\n        this.searchInput.focus();\r\n      }\r\n      this._bindDropdownListeners();\r\n      this.dropdownArrow.classList.add(\"iti__arrow--up\");\r\n      this._trigger(\"open:countrydropdown\");\r\n    }\r\n    //* Set the dropdown position\r\n    _setDropdownPosition() {\r\n      if (this.options.dropdownContainer) {\r\n        this.options.dropdownContainer.appendChild(this.dropdown);\r\n      }\r\n      if (!this.options.useFullscreenPopup) {\r\n        const inputPosRelativeToVP = this.telInput.getBoundingClientRect();\r\n        const inputHeight = this.telInput.offsetHeight;\r\n        if (this.options.dropdownContainer) {\r\n          this.dropdown.style.top = `${inputPosRelativeToVP.top + inputHeight}px`;\r\n          this.dropdown.style.left = `${inputPosRelativeToVP.left}px`;\r\n          this._handleWindowScroll = () => this._closeDropdown();\r\n          window.addEventListener(\"scroll\", this._handleWindowScroll);\r\n        }\r\n      }\r\n    }\r\n    //* We only bind dropdown listeners when the dropdown is open.\r\n    _bindDropdownListeners() {\r\n      this._handleMouseoverCountryList = (e) => {\r\n        const listItem = e.target?.closest(\".iti__country\");\r\n        if (listItem) {\r\n          this._highlightListItem(listItem, false);\r\n        }\r\n      };\r\n      this.countryList.addEventListener(\r\n        \"mouseover\",\r\n        this._handleMouseoverCountryList\r\n      );\r\n      this._handleClickCountryList = (e) => {\r\n        const listItem = e.target?.closest(\".iti__country\");\r\n        if (listItem) {\r\n          this._selectListItem(listItem);\r\n        }\r\n      };\r\n      this.countryList.addEventListener(\"click\", this._handleClickCountryList);\r\n      let isOpening = true;\r\n      this._handleClickOffToClose = () => {\r\n        if (!isOpening) {\r\n          this._closeDropdown();\r\n        }\r\n        isOpening = false;\r\n      };\r\n      document.documentElement.addEventListener(\r\n        \"click\",\r\n        this._handleClickOffToClose\r\n      );\r\n      let query = \"\";\r\n      let queryTimer = null;\r\n      this._handleKeydownOnDropdown = (e) => {\r\n        if ([\"ArrowUp\", \"ArrowDown\", \"Enter\", \"Escape\"].includes(e.key)) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          if (e.key === \"ArrowUp\" || e.key === \"ArrowDown\") {\r\n            this._handleUpDownKey(e.key);\r\n          } else if (e.key === \"Enter\") {\r\n            this._handleEnterKey();\r\n          } else if (e.key === \"Escape\") {\r\n            this._closeDropdown();\r\n          }\r\n        }\r\n        if (!this.options.countrySearch && /^[a-zA-ZÀ-ÿа-яА-Я ]$/.test(e.key)) {\r\n          e.stopPropagation();\r\n          if (queryTimer) {\r\n            clearTimeout(queryTimer);\r\n          }\r\n          query += e.key.toLowerCase();\r\n          this._searchForCountry(query);\r\n          queryTimer = setTimeout(() => {\r\n            query = \"\";\r\n          }, 1e3);\r\n        }\r\n      };\r\n      document.addEventListener(\"keydown\", this._handleKeydownOnDropdown);\r\n      if (this.options.countrySearch) {\r\n        const doFilter = () => {\r\n          const inputQuery = this.searchInput.value.trim();\r\n          if (inputQuery) {\r\n            this._filterCountries(inputQuery);\r\n          } else {\r\n            this._filterCountries(\"\", true);\r\n          }\r\n        };\r\n        let keyupTimer = null;\r\n        this._handleSearchChange = () => {\r\n          if (keyupTimer) {\r\n            clearTimeout(keyupTimer);\r\n          }\r\n          keyupTimer = setTimeout(() => {\r\n            doFilter();\r\n            keyupTimer = null;\r\n          }, 100);\r\n        };\r\n        this.searchInput.addEventListener(\"input\", this._handleSearchChange);\r\n        this.searchInput.addEventListener(\"click\", (e) => e.stopPropagation());\r\n      }\r\n    }\r\n    //* Hidden search (countrySearch disabled): Find the first list item whose name starts with the query string.\r\n    _searchForCountry(query) {\r\n      for (let i = 0; i < this.countries.length; i++) {\r\n        const c = this.countries[i];\r\n        const startsWith = c.name.substr(0, query.length).toLowerCase() === query;\r\n        if (startsWith) {\r\n          const listItem = c.nodeById[this.id];\r\n          this._highlightListItem(listItem, false);\r\n          this._scrollTo(listItem);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    //* Country search enabled: Filter the countries according to the search query.\r\n    _filterCountries(query, isReset = false) {\r\n      let noCountriesAddedYet = true;\r\n      this.countryList.innerHTML = \"\";\r\n      const normalisedQuery = normaliseString(query);\r\n      for (let i = 0; i < this.countries.length; i++) {\r\n        const c = this.countries[i];\r\n        const normalisedCountryName = normaliseString(c.name);\r\n        const countryInitials = c.name.split(/[^a-zA-ZÀ-ÿа-яА-Я]/).map((word) => word[0]).join(\"\").toLowerCase();\r\n        const fullDialCode = `+${c.dialCode}`;\r\n        if (isReset || normalisedCountryName.includes(normalisedQuery) || fullDialCode.includes(normalisedQuery) || c.iso2.includes(normalisedQuery) || countryInitials.includes(normalisedQuery)) {\r\n          const listItem = c.nodeById[this.id];\r\n          if (listItem) {\r\n            this.countryList.appendChild(listItem);\r\n          }\r\n          if (noCountriesAddedYet) {\r\n            this._highlightListItem(listItem, false);\r\n            noCountriesAddedYet = false;\r\n          }\r\n        }\r\n      }\r\n      if (noCountriesAddedYet) {\r\n        this._highlightListItem(null, false);\r\n      }\r\n      this.countryList.scrollTop = 0;\r\n      this._updateSearchResultsText();\r\n    }\r\n    //* Update search results text (for a11y).\r\n    _updateSearchResultsText() {\r\n      const { i18n } = this.options;\r\n      const count = this.countryList.childElementCount;\r\n      let searchText;\r\n      if (count === 0) {\r\n        searchText = i18n.zeroSearchResults;\r\n      } else if (count === 1) {\r\n        searchText = i18n.oneSearchResult;\r\n      } else {\r\n        searchText = i18n.multipleSearchResults.replace(\"${count}\", count.toString());\r\n      }\r\n      this.searchResultsA11yText.textContent = searchText;\r\n    }\r\n    //* Highlight the next/prev item in the list (and ensure it is visible).\r\n    _handleUpDownKey(key) {\r\n      let next = key === \"ArrowUp\" ? this.highlightedItem?.previousElementSibling : this.highlightedItem?.nextElementSibling;\r\n      if (!next && this.countryList.childElementCount > 1) {\r\n        next = key === \"ArrowUp\" ? this.countryList.lastElementChild : this.countryList.firstElementChild;\r\n      }\r\n      if (next) {\r\n        this._scrollTo(next);\r\n        this._highlightListItem(next, false);\r\n      }\r\n    }\r\n    //* Select the currently highlighted item.\r\n    _handleEnterKey() {\r\n      if (this.highlightedItem) {\r\n        this._selectListItem(this.highlightedItem);\r\n      }\r\n    }\r\n    //* Update the input's value to the given val (format first if possible)\r\n    //* NOTE: this is called from _setInitialState, handleUtils and setNumber.\r\n    _updateValFromNumber(fullNumber) {\r\n      let number = fullNumber;\r\n      if (this.options.formatOnDisplay && intlTelInput.utils && this.selectedCountryData) {\r\n        const useNational = this.options.nationalMode || number.charAt(0) !== \"+\" && !this.options.separateDialCode;\r\n        const { NATIONAL, INTERNATIONAL } = intlTelInput.utils.numberFormat;\r\n        const format = useNational ? NATIONAL : INTERNATIONAL;\r\n        number = intlTelInput.utils.formatNumber(\r\n          number,\r\n          this.selectedCountryData.iso2,\r\n          format\r\n        );\r\n      }\r\n      number = this._beforeSetNumber(number);\r\n      this.telInput.value = number;\r\n    }\r\n    //* Check if need to select a new country based on the given number\r\n    //* Note: called from _setInitialState, keyup handler, setNumber.\r\n    _updateCountryFromNumber(fullNumber) {\r\n      const iso2 = this._getCountryFromNumber(fullNumber);\r\n      if (iso2 !== null) {\r\n        return this._setCountry(iso2);\r\n      }\r\n      return false;\r\n    }\r\n    _ensureHasDialCode(number) {\r\n      const { dialCode, nationalPrefix } = this.selectedCountryData;\r\n      const alreadyHasPlus = number.charAt(0) === \"+\";\r\n      if (alreadyHasPlus || !dialCode) {\r\n        return number;\r\n      }\r\n      const hasPrefix = nationalPrefix && number.charAt(0) === nationalPrefix && !this.options.separateDialCode;\r\n      const cleanNumber = hasPrefix ? number.substring(1) : number;\r\n      return `+${dialCode}${cleanNumber}`;\r\n    }\r\n    _getCountryFromNumber(fullNumber) {\r\n      const plusIndex = fullNumber.indexOf(\"+\");\r\n      let number = plusIndex ? fullNumber.substring(plusIndex) : fullNumber;\r\n      const selectedIso2 = this.selectedCountryData.iso2;\r\n      const selectedDialCode = this.selectedCountryData.dialCode;\r\n      number = this._ensureHasDialCode(number);\r\n      const dialCodeMatch = this._getDialCode(number, true);\r\n      const numeric = getNumeric(number);\r\n      if (dialCodeMatch) {\r\n        const dialCodeMatchNumeric = getNumeric(dialCodeMatch);\r\n        const iso2Codes = this.dialCodeToIso2Map[dialCodeMatchNumeric];\r\n        if (!selectedIso2 && this.defaultCountry && iso2Codes.includes(this.defaultCountry)) {\r\n          return this.defaultCountry;\r\n        }\r\n        const alreadySelected = selectedIso2 && iso2Codes.includes(selectedIso2) && (numeric.length === dialCodeMatchNumeric.length || !this.selectedCountryData.areaCodes);\r\n        const isRegionlessNanpNumber = selectedDialCode === \"1\" && isRegionlessNanp(numeric);\r\n        if (!isRegionlessNanpNumber && !alreadySelected) {\r\n          for (let j = 0; j < iso2Codes.length; j++) {\r\n            if (iso2Codes[j]) {\r\n              return iso2Codes[j];\r\n            }\r\n          }\r\n        }\r\n      } else if (number.charAt(0) === \"+\" && numeric.length) {\r\n        return \"\";\r\n      } else if ((!number || number === \"+\") && !this.selectedCountryData.iso2) {\r\n        return this.defaultCountry;\r\n      }\r\n      return null;\r\n    }\r\n    //* Remove highlighting from other list items and highlight the given item.\r\n    _highlightListItem(listItem, shouldFocus) {\r\n      const prevItem = this.highlightedItem;\r\n      if (prevItem) {\r\n        prevItem.classList.remove(\"iti__highlight\");\r\n        prevItem.setAttribute(\"aria-selected\", \"false\");\r\n      }\r\n      this.highlightedItem = listItem;\r\n      if (this.highlightedItem) {\r\n        this.highlightedItem.classList.add(\"iti__highlight\");\r\n        this.highlightedItem.setAttribute(\"aria-selected\", \"true\");\r\n        const activeDescendant = this.highlightedItem.getAttribute(\"id\") || \"\";\r\n        this.selectedCountry.setAttribute(\"aria-activedescendant\", activeDescendant);\r\n        if (this.options.countrySearch) {\r\n          this.searchInput.setAttribute(\"aria-activedescendant\", activeDescendant);\r\n        }\r\n      }\r\n      if (shouldFocus) {\r\n        this.highlightedItem.focus();\r\n      }\r\n    }\r\n    //* Find the country data for the given iso2 code\r\n    //* the ignoreOnlyCountriesOption is only used during init() while parsing the onlyCountries array\r\n    _getCountryData(iso2, allowFail) {\r\n      for (let i = 0; i < this.countries.length; i++) {\r\n        if (this.countries[i].iso2 === iso2) {\r\n          return this.countries[i];\r\n        }\r\n      }\r\n      if (allowFail) {\r\n        return null;\r\n      }\r\n      throw new Error(`No country data for '${iso2}'`);\r\n    }\r\n    //* Update the selected country, dial code (if separateDialCode), placeholder, title, and active list item.\r\n    //* Note: called from _setInitialState, _updateCountryFromNumber, _selectListItem, setCountry.\r\n    _setCountry(iso2) {\r\n      const { separateDialCode, showFlags, i18n } = this.options;\r\n      const prevCountry = this.selectedCountryData.iso2 ? this.selectedCountryData : {};\r\n      this.selectedCountryData = iso2 ? this._getCountryData(iso2, false) || {} : {};\r\n      if (this.selectedCountryData.iso2) {\r\n        this.defaultCountry = this.selectedCountryData.iso2;\r\n      }\r\n      if (this.selectedCountryInner) {\r\n        let flagClass = \"\";\r\n        let a11yText = \"\";\r\n        if (iso2 && showFlags) {\r\n          flagClass = `iti__flag iti__${iso2}`;\r\n          a11yText = `${this.selectedCountryData.name} +${this.selectedCountryData.dialCode}`;\r\n        } else {\r\n          flagClass = \"iti__flag iti__globe\";\r\n          a11yText = i18n.noCountrySelected;\r\n        }\r\n        this.selectedCountryInner.className = flagClass;\r\n        this.selectedCountryA11yText.textContent = a11yText;\r\n      }\r\n      this._setSelectedCountryTitleAttribute(iso2, separateDialCode);\r\n      if (separateDialCode) {\r\n        const dialCode = this.selectedCountryData.dialCode ? `+${this.selectedCountryData.dialCode}` : \"\";\r\n        this.selectedDialCode.innerHTML = dialCode;\r\n        this._updateInputPadding();\r\n      }\r\n      this._updatePlaceholder();\r\n      this._updateMaxLength();\r\n      return prevCountry.iso2 !== iso2;\r\n    }\r\n    //* Update the input padding to make space for the selected country/dial code.\r\n    _updateInputPadding() {\r\n      if (this.selectedCountry) {\r\n        const selectedCountryWidth = this.selectedCountry.offsetWidth || this._getHiddenSelectedCountryWidth();\r\n        const inputPadding = selectedCountryWidth + 6;\r\n        if (this.showSelectedCountryOnLeft) {\r\n          this.telInput.style.paddingLeft = `${inputPadding}px`;\r\n        } else {\r\n          this.telInput.style.paddingRight = `${inputPadding}px`;\r\n        }\r\n      }\r\n    }\r\n    //* Update the maximum valid number length for the currently selected country.\r\n    _updateMaxLength() {\r\n      const { strictMode, placeholderNumberType, validationNumberTypes } = this.options;\r\n      const { iso2 } = this.selectedCountryData;\r\n      if (strictMode && intlTelInput.utils) {\r\n        if (iso2) {\r\n          const numberType = intlTelInput.utils.numberType[placeholderNumberType];\r\n          let exampleNumber = intlTelInput.utils.getExampleNumber(\r\n            iso2,\r\n            false,\r\n            numberType,\r\n            true\r\n          );\r\n          let validNumber = exampleNumber;\r\n          while (intlTelInput.utils.isPossibleNumber(exampleNumber, iso2, validationNumberTypes)) {\r\n            validNumber = exampleNumber;\r\n            exampleNumber += \"0\";\r\n          }\r\n          const coreNumber = intlTelInput.utils.getCoreNumber(validNumber, iso2);\r\n          this.maxCoreNumberLength = coreNumber.length;\r\n          if (iso2 === \"by\") {\r\n            this.maxCoreNumberLength = coreNumber.length + 1;\r\n          }\r\n        } else {\r\n          this.maxCoreNumberLength = null;\r\n        }\r\n      }\r\n    }\r\n    _setSelectedCountryTitleAttribute(iso2 = null, separateDialCode) {\r\n      if (!this.selectedCountry) {\r\n        return;\r\n      }\r\n      let title;\r\n      if (iso2 && !separateDialCode) {\r\n        title = `${this.selectedCountryData.name}: +${this.selectedCountryData.dialCode}`;\r\n      } else if (iso2) {\r\n        title = this.selectedCountryData.name;\r\n      } else {\r\n        title = \"Unknown\";\r\n      }\r\n      this.selectedCountry.setAttribute(\"title\", title);\r\n    }\r\n    //* When the input is in a hidden container during initialisation, we must inject some markup\r\n    //* into the end of the DOM to calculate the correct offsetWidth.\r\n    //* NOTE: this is only used when separateDialCode is enabled, so countryContainer and selectedCountry\r\n    //* will definitely exist.\r\n    _getHiddenSelectedCountryWidth() {\r\n      if (this.telInput.parentNode) {\r\n        const containerClone = this.telInput.parentNode.cloneNode(false);\r\n        containerClone.style.visibility = \"hidden\";\r\n        document.body.appendChild(containerClone);\r\n        const countryContainerClone = this.countryContainer.cloneNode();\r\n        containerClone.appendChild(countryContainerClone);\r\n        const selectedCountryClone = this.selectedCountry.cloneNode(true);\r\n        countryContainerClone.appendChild(selectedCountryClone);\r\n        const width = selectedCountryClone.offsetWidth;\r\n        document.body.removeChild(containerClone);\r\n        return width;\r\n      }\r\n      return 0;\r\n    }\r\n    //* Update the input placeholder to an example number from the currently selected country.\r\n    _updatePlaceholder() {\r\n      const {\r\n        autoPlaceholder,\r\n        placeholderNumberType,\r\n        nationalMode,\r\n        customPlaceholder\r\n      } = this.options;\r\n      const shouldSetPlaceholder = autoPlaceholder === \"aggressive\" || !this.hadInitialPlaceholder && autoPlaceholder === \"polite\";\r\n      if (intlTelInput.utils && shouldSetPlaceholder) {\r\n        const numberType = intlTelInput.utils.numberType[placeholderNumberType];\r\n        let placeholder = this.selectedCountryData.iso2 ? intlTelInput.utils.getExampleNumber(\r\n          this.selectedCountryData.iso2,\r\n          nationalMode,\r\n          numberType\r\n        ) : \"\";\r\n        placeholder = this._beforeSetNumber(placeholder);\r\n        if (typeof customPlaceholder === \"function\") {\r\n          placeholder = customPlaceholder(placeholder, this.selectedCountryData);\r\n        }\r\n        this.telInput.setAttribute(\"placeholder\", placeholder);\r\n      }\r\n    }\r\n    //* Called when the user selects a list item from the dropdown.\r\n    _selectListItem(listItem) {\r\n      const countryChanged = this._setCountry(\r\n        listItem.getAttribute(\"data-country-code\")\r\n      );\r\n      this._closeDropdown();\r\n      this._updateDialCode(listItem.getAttribute(\"data-dial-code\"));\r\n      this.telInput.focus();\r\n      if (countryChanged) {\r\n        this._triggerCountryChange();\r\n      }\r\n    }\r\n    //* Close the dropdown and unbind any listeners.\r\n    _closeDropdown() {\r\n      this.dropdownContent.classList.add(\"iti__hide\");\r\n      this.selectedCountry.setAttribute(\"aria-expanded\", \"false\");\r\n      this.selectedCountry.removeAttribute(\"aria-activedescendant\");\r\n      if (this.highlightedItem) {\r\n        this.highlightedItem.setAttribute(\"aria-selected\", \"false\");\r\n      }\r\n      if (this.options.countrySearch) {\r\n        this.searchInput.removeAttribute(\"aria-activedescendant\");\r\n      }\r\n      this.dropdownArrow.classList.remove(\"iti__arrow--up\");\r\n      document.removeEventListener(\"keydown\", this._handleKeydownOnDropdown);\r\n      if (this.options.countrySearch) {\r\n        this.searchInput.removeEventListener(\"input\", this._handleSearchChange);\r\n      }\r\n      document.documentElement.removeEventListener(\r\n        \"click\",\r\n        this._handleClickOffToClose\r\n      );\r\n      this.countryList.removeEventListener(\r\n        \"mouseover\",\r\n        this._handleMouseoverCountryList\r\n      );\r\n      this.countryList.removeEventListener(\"click\", this._handleClickCountryList);\r\n      if (this.options.dropdownContainer) {\r\n        if (!this.options.useFullscreenPopup) {\r\n          window.removeEventListener(\"scroll\", this._handleWindowScroll);\r\n        }\r\n        if (this.dropdown.parentNode) {\r\n          this.dropdown.parentNode.removeChild(this.dropdown);\r\n        }\r\n      }\r\n      if (this._handlePageLoad) {\r\n        window.removeEventListener(\"load\", this._handlePageLoad);\r\n      }\r\n      this._trigger(\"close:countrydropdown\");\r\n    }\r\n    //* Check if an element is visible within it's container, else scroll until it is.\r\n    _scrollTo(element) {\r\n      const container = this.countryList;\r\n      const scrollTop = document.documentElement.scrollTop;\r\n      const containerHeight = container.offsetHeight;\r\n      const containerTop = container.getBoundingClientRect().top + scrollTop;\r\n      const containerBottom = containerTop + containerHeight;\r\n      const elementHeight = element.offsetHeight;\r\n      const elementTop = element.getBoundingClientRect().top + scrollTop;\r\n      const elementBottom = elementTop + elementHeight;\r\n      const newScrollTop = elementTop - containerTop + container.scrollTop;\r\n      if (elementTop < containerTop) {\r\n        container.scrollTop = newScrollTop;\r\n      } else if (elementBottom > containerBottom) {\r\n        const heightDifference = containerHeight - elementHeight;\r\n        container.scrollTop = newScrollTop - heightDifference;\r\n      }\r\n    }\r\n    //* Replace any existing dial code with the new one\r\n    //* Note: called from _selectListItem and setCountry\r\n    _updateDialCode(newDialCodeBare) {\r\n      const inputVal = this.telInput.value;\r\n      const newDialCode = `+${newDialCodeBare}`;\r\n      let newNumber;\r\n      if (inputVal.charAt(0) === \"+\") {\r\n        const prevDialCode = this._getDialCode(inputVal);\r\n        if (prevDialCode) {\r\n          newNumber = inputVal.replace(prevDialCode, newDialCode);\r\n        } else {\r\n          newNumber = newDialCode;\r\n        }\r\n        this.telInput.value = newNumber;\r\n      }\r\n    }\r\n    //* Try and extract a valid international dial code from a full telephone number.\r\n    //* Note: returns the raw string inc plus character and any whitespace/dots etc.\r\n    _getDialCode(number, includeAreaCode) {\r\n      let dialCode = \"\";\r\n      if (number.charAt(0) === \"+\") {\r\n        let numericChars = \"\";\r\n        for (let i = 0; i < number.length; i++) {\r\n          const c = number.charAt(i);\r\n          if (!isNaN(parseInt(c, 10))) {\r\n            numericChars += c;\r\n            if (includeAreaCode) {\r\n              if (this.dialCodeToIso2Map[numericChars]) {\r\n                dialCode = number.substr(0, i + 1);\r\n              }\r\n            } else {\r\n              if (this.dialCodes[numericChars]) {\r\n                dialCode = number.substr(0, i + 1);\r\n                break;\r\n              }\r\n            }\r\n            if (numericChars.length === this.dialCodeMaxLen) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return dialCode;\r\n    }\r\n    //* Get the input val, adding the dial code if separateDialCode is enabled.\r\n    _getFullNumber(overrideVal) {\r\n      const val = overrideVal || this.telInput.value.trim();\r\n      const { dialCode } = this.selectedCountryData;\r\n      let prefix;\r\n      const numericVal = getNumeric(val);\r\n      if (this.options.separateDialCode && val.charAt(0) !== \"+\" && dialCode && numericVal) {\r\n        prefix = `+${dialCode}`;\r\n      } else {\r\n        prefix = \"\";\r\n      }\r\n      return prefix + val;\r\n    }\r\n    //* Remove the dial code if separateDialCode is enabled also cap the length if the input has a maxlength attribute\r\n    _beforeSetNumber(fullNumber) {\r\n      let number = fullNumber;\r\n      if (this.options.separateDialCode) {\r\n        let dialCode = this._getDialCode(number);\r\n        if (dialCode) {\r\n          dialCode = `+${this.selectedCountryData.dialCode}`;\r\n          const start = number[dialCode.length] === \" \" || number[dialCode.length] === \"-\" ? dialCode.length + 1 : dialCode.length;\r\n          number = number.substr(start);\r\n        }\r\n      }\r\n      return this._cap(number);\r\n    }\r\n    //* Trigger the 'countrychange' event.\r\n    _triggerCountryChange() {\r\n      this._trigger(\"countrychange\");\r\n    }\r\n    //* Format the number as the user types.\r\n    _formatNumberAsYouType() {\r\n      const val = this._getFullNumber();\r\n      const result = intlTelInput.utils ? intlTelInput.utils.formatNumberAsYouType(val, this.selectedCountryData.iso2) : val;\r\n      const { dialCode } = this.selectedCountryData;\r\n      if (this.options.separateDialCode && this.telInput.value.charAt(0) !== \"+\" && result.includes(`+${dialCode}`)) {\r\n        const afterDialCode = result.split(`+${dialCode}`)[1] || \"\";\r\n        return afterDialCode.trim();\r\n      }\r\n      return result;\r\n    }\r\n    //**************************\r\n    //*  SECRET PUBLIC METHODS\r\n    //**************************\r\n    //* This is called when the geoip call returns.\r\n    handleAutoCountry() {\r\n      if (this.options.initialCountry === \"auto\" && intlTelInput.autoCountry) {\r\n        this.defaultCountry = intlTelInput.autoCountry;\r\n        const hasSelectedCountryOrGlobe = this.selectedCountryData.iso2 || this.selectedCountryInner.classList.contains(\"iti__globe\");\r\n        if (!hasSelectedCountryOrGlobe) {\r\n          this.setCountry(this.defaultCountry);\r\n        }\r\n        this.resolveAutoCountryPromise();\r\n      }\r\n    }\r\n    //* This is called when the utils request completes.\r\n    handleUtils() {\r\n      if (intlTelInput.utils) {\r\n        if (this.telInput.value) {\r\n          this._updateValFromNumber(this.telInput.value);\r\n        }\r\n        if (this.selectedCountryData.iso2) {\r\n          this._updatePlaceholder();\r\n          this._updateMaxLength();\r\n        }\r\n      }\r\n      this.resolveUtilsScriptPromise();\r\n    }\r\n    //********************\r\n    //*  PUBLIC METHODS\r\n    //********************\r\n    //* Remove plugin.\r\n    destroy() {\r\n      const { allowDropdown, separateDialCode } = this.options;\r\n      if (allowDropdown) {\r\n        this._closeDropdown();\r\n        this.selectedCountry.removeEventListener(\r\n          \"click\",\r\n          this._handleClickSelectedCountry\r\n        );\r\n        this.countryContainer.removeEventListener(\r\n          \"keydown\",\r\n          this._handleCountryContainerKeydown\r\n        );\r\n        const label = this.telInput.closest(\"label\");\r\n        if (label) {\r\n          label.removeEventListener(\"click\", this._handleLabelClick);\r\n        }\r\n      }\r\n      const { form } = this.telInput;\r\n      if (this._handleHiddenInputSubmit && form) {\r\n        form.removeEventListener(\"submit\", this._handleHiddenInputSubmit);\r\n      }\r\n      this.telInput.removeEventListener(\"input\", this._handleInputEvent);\r\n      if (this._handleKeydownEvent) {\r\n        this.telInput.removeEventListener(\"keydown\", this._handleKeydownEvent);\r\n      }\r\n      this.telInput.removeAttribute(\"data-intl-tel-input-id\");\r\n      if (separateDialCode) {\r\n        if (this.isRTL) {\r\n          this.telInput.style.paddingRight = this.originalPaddingRight;\r\n        } else {\r\n          this.telInput.style.paddingLeft = this.originalPaddingLeft;\r\n        }\r\n      }\r\n      const wrapper = this.telInput.parentNode;\r\n      wrapper?.parentNode?.insertBefore(this.telInput, wrapper);\r\n      wrapper?.parentNode?.removeChild(wrapper);\r\n      delete intlTelInput.instances[this.id];\r\n    }\r\n    //* Get the extension from the current number.\r\n    getExtension() {\r\n      if (intlTelInput.utils) {\r\n        return intlTelInput.utils.getExtension(\r\n          this._getFullNumber(),\r\n          this.selectedCountryData.iso2\r\n        );\r\n      }\r\n      return \"\";\r\n    }\r\n    //* Format the number to the given format.\r\n    getNumber(format) {\r\n      if (intlTelInput.utils) {\r\n        const { iso2 } = this.selectedCountryData;\r\n        return intlTelInput.utils.formatNumber(\r\n          this._getFullNumber(),\r\n          iso2,\r\n          format\r\n        );\r\n      }\r\n      return \"\";\r\n    }\r\n    //* Get the type of the entered number e.g. landline/mobile.\r\n    getNumberType() {\r\n      if (intlTelInput.utils) {\r\n        return intlTelInput.utils.getNumberType(\r\n          this._getFullNumber(),\r\n          this.selectedCountryData.iso2\r\n        );\r\n      }\r\n      return -99;\r\n    }\r\n    //* Get the country data for the currently selected country.\r\n    getSelectedCountryData() {\r\n      return this.selectedCountryData;\r\n    }\r\n    //* Get the validation error.\r\n    getValidationError() {\r\n      if (intlTelInput.utils) {\r\n        const { iso2 } = this.selectedCountryData;\r\n        return intlTelInput.utils.getValidationError(this._getFullNumber(), iso2);\r\n      }\r\n      return -99;\r\n    }\r\n    //* Validate the input val\r\n    isValidNumber() {\r\n      if (!this.selectedCountryData.iso2) {\r\n        return false;\r\n      }\r\n      const val = this._getFullNumber();\r\n      const alphaCharPosition = val.search(/\\p{L}/u);\r\n      if (alphaCharPosition > -1) {\r\n        const beforeAlphaChar = val.substring(0, alphaCharPosition);\r\n        const beforeAlphaIsValid = this._utilsIsPossibleNumber(beforeAlphaChar);\r\n        const isValid = this._utilsIsPossibleNumber(val);\r\n        return beforeAlphaIsValid && isValid;\r\n      }\r\n      return this._utilsIsPossibleNumber(val);\r\n    }\r\n    _utilsIsPossibleNumber(val) {\r\n      return intlTelInput.utils ? intlTelInput.utils.isPossibleNumber(val, this.selectedCountryData.iso2, this.options.validationNumberTypes) : null;\r\n    }\r\n    //* Validate the input val (precise)\r\n    isValidNumberPrecise() {\r\n      if (!this.selectedCountryData.iso2) {\r\n        return false;\r\n      }\r\n      const val = this._getFullNumber();\r\n      const alphaCharPosition = val.search(/\\p{L}/u);\r\n      if (alphaCharPosition > -1) {\r\n        const beforeAlphaChar = val.substring(0, alphaCharPosition);\r\n        const beforeAlphaIsValid = this._utilsIsValidNumber(beforeAlphaChar);\r\n        const isValid = this._utilsIsValidNumber(val);\r\n        return beforeAlphaIsValid && isValid;\r\n      }\r\n      return this._utilsIsValidNumber(val);\r\n    }\r\n    _utilsIsValidNumber(val) {\r\n      return intlTelInput.utils ? intlTelInput.utils.isValidNumber(val, this.selectedCountryData.iso2, this.options.validationNumberTypes) : null;\r\n    }\r\n    //* Update the selected country, and update the input val accordingly.\r\n    setCountry(iso2) {\r\n      const iso2Lower = iso2?.toLowerCase();\r\n      const currentCountry = this.selectedCountryData.iso2;\r\n      const isCountryChange = iso2 && iso2Lower !== currentCountry || !iso2 && currentCountry;\r\n      if (isCountryChange) {\r\n        this._setCountry(iso2Lower);\r\n        this._updateDialCode(this.selectedCountryData.dialCode);\r\n        this._triggerCountryChange();\r\n      }\r\n    }\r\n    //* Set the input value and update the country.\r\n    setNumber(number) {\r\n      const countryChanged = this._updateCountryFromNumber(number);\r\n      this._updateValFromNumber(number);\r\n      if (countryChanged) {\r\n        this._triggerCountryChange();\r\n      }\r\n      this._trigger(\"input\", { isSetNumber: true });\r\n    }\r\n    //* Set the placeholder number typ\r\n    setPlaceholderNumberType(type) {\r\n      this.options.placeholderNumberType = type;\r\n      this._updatePlaceholder();\r\n    }\r\n    setDisabled(disabled) {\r\n      this.telInput.disabled = disabled;\r\n      if (disabled) {\r\n        this.selectedCountry.setAttribute(\"disabled\", \"true\");\r\n      } else {\r\n        this.selectedCountry.removeAttribute(\"disabled\");\r\n      }\r\n    }\r\n  };\r\n  var attachUtils = (source) => {\r\n    if (!intlTelInput.utils && !intlTelInput.startedLoadingUtilsScript) {\r\n      let loadCall;\r\n      if (typeof source === \"function\") {\r\n        try {\r\n          loadCall = Promise.resolve(source());\r\n        } catch (error) {\r\n          return Promise.reject(error);\r\n        }\r\n      } else {\r\n        return Promise.reject(new TypeError(`The argument passed to attachUtils must be a function that returns a promise for the utilities module, not ${typeof source}`));\r\n      }\r\n      intlTelInput.startedLoadingUtilsScript = true;\r\n      return loadCall.then((module) => {\r\n        const utils = module?.default;\r\n        if (!utils || typeof utils !== \"object\") {\r\n          throw new TypeError(\"The loader function passed to attachUtils did not resolve to a module object with utils as its default export.\");\r\n        }\r\n        intlTelInput.utils = utils;\r\n        forEachInstance(\"handleUtils\");\r\n        return true;\r\n      }).catch((error) => {\r\n        forEachInstance(\"rejectUtilsScriptPromise\", error);\r\n        throw error;\r\n      });\r\n    }\r\n    return null;\r\n  };\r\n  var intlTelInput = Object.assign(\r\n    (input, options) => {\r\n      const iti = new Iti(input, options);\r\n      iti._init();\r\n      input.setAttribute(\"data-intl-tel-input-id\", iti.id.toString());\r\n      intlTelInput.instances[iti.id] = iti;\r\n      return iti;\r\n    },\r\n    {\r\n      defaults,\r\n      //* Using a static var like this allows us to mock it in the tests.\r\n      documentReady: () => document.readyState === \"complete\",\r\n      //* Get the country data object.\r\n      getCountryData: () => data_default,\r\n      //* A getter for the plugin instance.\r\n      getInstance: (input) => {\r\n        const id2 = input.getAttribute(\"data-intl-tel-input-id\");\r\n        return id2 ? intlTelInput.instances[id2] : null;\r\n      },\r\n      //* A map from instance ID to instance object.\r\n      instances: {},\r\n      attachUtils,\r\n      startedLoadingUtilsScript: false,\r\n      startedLoadingAutoCountry: false,\r\n      version: \"25.3.1\"\r\n    }\r\n  );\r\n  var intl_tel_input_default = intlTelInput;\r\n  return __toCommonJS(intl_tel_input_exports);\r\n})();\r\n\r\n// UMD\r\n  return factoryOutput.default;\r\n}));\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAOA,KAAC,SAAS,SAAS;AACjB,UAAI,OAAO,WAAW,YAAY,OAAO,SAAS;AAChD,eAAO,UAAU,QAAQ;AAAA,MAC3B,OAAO;AACL,eAAO,eAAe,QAAQ;AAAA,MAChC;AAAA,IACF,GAAE,MAAM;AAER,UAAI,iBAAiB,MAAM;AACzB,YAAI,YAAY,OAAO;AACvB,YAAI,mBAAmB,OAAO;AAC9B,YAAI,oBAAoB,OAAO;AAC/B,YAAI,eAAe,OAAO,UAAU;AACpC,YAAI,WAAW,CAAC,QAAQ,QAAQ;AAC9B,mBAAS,QAAQ;AACf,sBAAU,QAAQ,MAAM,EAAE,KAAK,IAAI,IAAI,GAAG,YAAY,KAAK,CAAC;AAAA,QAChE;AACA,YAAI,cAAc,CAAC,IAAI,MAAM,QAAQ,SAAS;AAC5C,cAAI,QAAQ,OAAO,SAAS,YAAY,OAAO,SAAS,YAAY;AAClE,qBAAS,OAAO,kBAAkB,IAAI;AACpC,kBAAI,CAAC,aAAa,KAAK,IAAI,GAAG,KAAK,QAAQ;AACzC,0BAAU,IAAI,KAAK,EAAE,KAAK,MAAM,KAAK,GAAG,GAAG,YAAY,EAAE,OAAO,iBAAiB,MAAM,GAAG,MAAM,KAAK,WAAW,CAAC;AAAA,UACvH;AACA,iBAAO;AAAA,QACT;AACA,YAAI,eAAe,CAAC,QAAQ,YAAY,UAAU,CAAC,GAAG,cAAc,EAAE,OAAO,KAAK,CAAC,GAAG,GAAG;AAGzF,YAAI,yBAAyB,CAAC;AAC9B,iBAAS,wBAAwB;AAAA,UAC/B,KAAK,MAAM;AAAA,UACX,SAAS,MAAM;AAAA,QACjB,CAAC;AAGD,YAAI,iBAAiB;AAAA,UACnB;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA,CAAC,KAAK;AAAA,UACR;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA,CAAC,KAAK;AAAA,UACR;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA,CAAC,KAAK;AAAA,UACR;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA,CAAC,KAAK;AAAA,UACR;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA,CAAC,KAAK;AAAA,UACR;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA,CAAC,KAAK;AAAA,UACR;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,Y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AAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA,CAAC,KAAK;AAAA,UACR;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA,CAAC,KAAK;AAAA,UACR;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,UACF;AAAA,UACA;AAAA,YACE;A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ACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA,CAAC,KAAK;AAAA,UACR;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA,CAAC,KAAK;AAAA,UACR;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA,CAAC,KAAK;AAAA,UACR;AAAA,UACA;AAAA,YACE;AAAA;AAAA,YAEA;AAAA,UACF;AAAA,UACA;AAAA,YACE;AAAA;AAAA,Y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",
  "names": ["module"]
}
